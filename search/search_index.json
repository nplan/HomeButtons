{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Buttons","text":"<p>Open source devices simplifying your smart home.</p> <p>Designed for Home Assistant .</p> <p></p> <p></p> <p>Home Buttons lets you control you smart home in a simple and intuitive way. With a couple of push buttons, you can set scenes, control lights, trigger automations, and more.</p> <p>The device features an e-paper display that shows a label for each button. So you always know what it does! All while consuming next to no power.</p> <p>The labels and button actions can be easily configured directly in Home Assistant.</p> <p>Home Buttons communicates via the MQTT protocol on a local network. No cloud required.</p> <p>It's also possible to use Home Buttons without Home Assistant. It can be integrated into most smart home systems that support MQTT, though some features may not be available.</p>"},{"location":"#devices","title":"Devices","text":""},{"location":"#home-buttons-mini","title":"Home Buttons Mini","text":"<p>Compact device with 4 buttons and a 1.5\" display. Supports icon labels. Powered by AA batteries with up to 2 years of battery life.</p> <p>Features:</p> <ul> <li>4 push buttons, multiple press support</li> <li>1.5\" e-paper display</li> <li>Material Design Icons </li> <li>Temperature &amp; humidity sensor</li> <li>2x AA batteries</li> <li>1-2 year battery life</li> <li>Compact size: 64 x 64 x 20 mm</li> </ul> <p>Learn more...</p>"},{"location":"#home-buttons_1","title":"Home Buttons","text":"<p>The original Home Buttons. Larger device with 6 buttons and a 2.9\" display. Supports both text labels and icons. Can be powered by a rechargeable Li-Ion battery, USB-C, or 5V DC.</p> <p>Features:</p> <ul> <li>6 push buttons, multiple press support</li> <li>2.9\" e-paper display</li> <li>Text labels and Material Design Icons </li> <li>Temperature &amp; humidity sensor</li> <li>Power options: Rechargeable 18650 Li-Ion Battery Cell, USB-C, 5V DC</li> <li>Greater than 1 year battery life</li> <li>Compact size: 87 x 87 x 23 mm</li> </ul> <p>Learn more...</p>"},{"location":"#home-buttons-industrial","title":"Home Buttons Industrial","text":"<p>A device featuring industrial-grade buttons and a rugged aluminum enclosure. Does not have a display. Powered by USB-C or 7-32 V DC. Ideal for garages and workshops.</p> <p>Features:</p> <ul> <li>Rugged industrial design with outstanding tactile feedback</li> <li>Illuminated momentary buttons (adjustable brightness)</li> <li>Buttons can be configured as triggers or switches</li> <li>Kill switch</li> <li>Wi-Fi connectivity</li> <li>Power options: USB-C (2 m cable included) or 7-32 V DC power</li> </ul> <p>Learn more...</p>"},{"location":"#where-to-get","title":"Where To Get","text":"<p>You can buy Home Buttons on Tindie or Lectronz.</p> <p></p> <p></p>"},{"location":"#license","title":"License","text":"<ul> <li>The software is open source and licensed under the GNU GPLv3.  </li> <li>The hardware is open source and licensed under the CERN-OHL-S-2.0.</li> </ul>"},{"location":"help/","title":"Frequent Issues","text":"<p>If you encounter an issue contact us at support@home-buttons.com  or create a new issue in the Github repository.</p>"},{"location":"help/#1-text-fields-for-labels-not-appearing-in-home-assistant","title":"1. Text fields for labels not appearing in Home Assistant","text":"<p>It's only supported in Home Assistant 2022.12 and later. Please update Home Assistant.</p>"},{"location":"help/#2-long-wi-fi-reaction-time","title":"2. Long Wi-Fi reaction time","text":"<p>The reaction time depends heavily on your Wi-Fi network. In congested networks or if the signal is weak where Home Buttons is installed, reaction time will be longer.</p> <p>Reaction time is also longer on WPA3 due to additional encryption compared to WPA2.</p> <p>You can considerably decrease the reaction time by setting up static IP for your Home Buttons.</p> <p>The expected average values for reaction time are:</p> <ul> <li>WPA2 static IP: 0.5 s</li> <li>WPA2 DHCP: 1.0 s</li> <li>WPA3 static IP: 2.0 s</li> <li>WPA3 DHCP: 3.0 s</li> </ul>"},{"location":"help/#3-device-not-appearing-in-home-assistant","title":"3. Device not appearing in Home Assistant","text":"<p>You might need to trigger a publish of the MQTT discovery message. To do that, enter Settings Menu by pressing any two buttons together for 5 s, and restart the device by pressing  or  blue button. The discovery message will be published on the next button press after the restart.</p>"},{"location":"help/#4-display-showing-instead-of-an-icon","title":"4. Display showing  instead of an icon","text":"<p>Please check that the icon name is correct and that you put <code>mdi:</code> prefix before the name.</p> <p>Another reason could be that the download of the icons failed.</p> <p>To trigger download again manually, enter Settings Menu by pressing any two buttons together for 5 s, and restart the device by pressing . The missing icons will be downloaded on the next button press after the restart.</p>"},{"location":"help/#5-bricked-device","title":"5. Bricked device","text":"<p>This can happen if you update to v2.4.0 or later directly from a version older than v2.1.0. Follow this instruction to recover your device:</p> <ol> <li>Write us at support@home-buttons.com. Include the serial number of your device. We'll send you the NVS bin file that you need for recovery.</li> <li>Connect device with an USB-C cable to your computer</li> <li>Go to Home Buttons Flasher</li> <li>Put device to programming mode by holding BOOT button and pressing RST button. Boot LED should light up.</li> <li>Select Home Buttons, V2.4.0 and Full Image</li> <li>Click Connect, select ESP32-S2 from the list and click Connect</li> <li>Click Install V2.4.0 ORIGINAL FULL IMAGE</li> <li>Check Erase device and click Next</li> <li>Confirm installation</li> <li>Wait about 2 minutes for installation to complete</li> <li>Close the browser tab and go to Adafruit ESPTool</li> <li>On device hold BOOT button and press RST button. Boot LED should light up.</li> <li>Select 921600 Baud and click Connect</li> <li>Select ESP32-S2 from the list &amp; click Connect</li> <li>In the first offset field enter 9000 and choose the provided NVS bin file</li> <li>Click Program and wait a few seconds</li> <li>On device press RST button. Home Buttons will show welcome screen.</li> <li>Set up the device again according to the getting started guide</li> </ol>"},{"location":"minimal/","title":"Minimal Setup","text":"<p>This guide explains how to get your Home Buttons device working with the minimal amount of setup. The only requirement is an MQTT broker. Home Assistant is not required.</p> <p>The required steps are:</p> <ol> <li>Connect your Home Buttons to your Wi-Fi network</li> <li>Set up an MQTT broker</li> <li>Connect Home Buttons to the MQTT broker</li> <li>Test if button presses are working</li> </ol>"},{"location":"minimal/#wi-fi-setup","title":"Wi-Fi Setup","text":"<p>See Set Up Wi-Fi Connection section of the Getting Started guide for how to get your Home Buttons device connected to your Wi-Fi network.</p>"},{"location":"minimal/#mqtt-broker","title":"MQTT broker","text":"<p>You will need a working MQTT broker to use Home Buttons. mosquitto is a good choice. To get it running as quickly as possible, run the following on a Debian server / VM:</p> <pre><code># Install mosquitto and some other tools\nsudo apt install -y mosquitto mosquitto-clients jq\n\n# Tell mosquitto to listen on an interface other than loopback\necho -n \"bind_address \"\nip -j a | jq -r '.[] | select(.ifname != \"lo\").addr_info[] | select(.family == \"inet\").local' | sudo tee -a /etc/mosquitto/conf.d/network.conf\n# The above command just figures out your IP address and puts \"bind_address IP\"\n# in /etc/mosquitto/conf.d/network.conf\n\n# Restart mosquitto so it is listening on the network interface (not the loopback)\nsystemctl restart mosquitto\n</code></pre> <p>At this point running <code>sudo ss -ltpn | grep mosquitto</code> should show that mosquitto is listening on port 1883. If that command does not return anything, something has gone wrong. In this case, check the mosquitto documentation to identify and resolve the issue.</p>"},{"location":"minimal/#connect-home-buttons-to-your-mqtt-broker","title":"Connect Home Buttons to your MQTT broker","text":"<p>See the Set Up MQTT connection section of the Getting Started guide for how to get your Home Buttons connected to your MQTT broker.</p>"},{"location":"minimal/#testing","title":"Testing","text":"<p>Home Buttons communicates by sending messages to various MQTT topics. For example, when you press a button, Home Buttons will send a message to your MQTT broker. It's up to other devices to listen for these messages and perform actions.</p> <p>The list of MQTT topics is vital to understand in order to test or troubleshoot your system. Below is an example of how you could view the messages that are sent when the first button (top left) is pressed. The command will not print anything until it receives a message.</p> <pre><code>mosquitto_sub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/button_1\"\n</code></pre> <p>The example above assumes:</p> <ul> <li>that the IP address of the Home Buttons device is <code>192.168.0.109</code></li> <li>the device name is <code>Home Buttons Kitchen</code> (configured during setup)</li> <li>the base topic is <code>homebuttons</code> (the default)</li> </ul> <p>If you press the first button, you should see <code>PRESS</code> appear on your console.</p> <p>Similarly, using <code>mosquitto_sub</code> with <code>button_2_double</code> instead of <code>button_1</code> will result in <code>PRESS</code> appearing when the second button (top right) is pressed twice.</p> <p>If this is working, you have confirmed that:</p> <ul> <li>Your MQTT broker is working</li> <li>Your Home Buttons device is on the network and connected to your MQTT broker</li> <li>The buttons are working as expected</li> </ul>"},{"location":"minimal/#additional-tests","title":"Additional tests","text":"<p>When in sleep mode (which is the default), Home Buttons will only wake up every few minutes to check in with the MQTT broker.</p> <p>To see how often the updates happen, check the sensor_interval:</p> <pre><code>mosquitto_sub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/sensor_interval\"\n</code></pre> <p>To change how often this happens, use <code>mosquitto_pub</code> with the <code>-r</code> flag (retain) and change the path to include <code>/cmd</code> like so:</p> <pre><code>mosquitto_pub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/cmd/sensor_interval\" -m \"1\" -r\n</code></pre> <p>The retain flag instructs the MQTT broker to hold onto the message, so it can be sent to non connected (sleeping) clients later, when they connect. </p> <p>A similar command can be used to update the button labels:</p> <pre><code>mosquitto_pub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/cmd/btn_1_label\" -m \"Look\" -r\nmosquitto_pub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/cmd/btn_2_label\" -m \"mom\" -r\nmosquitto_pub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/cmd/btn_3_label\" -m \"\" -r\nmosquitto_pub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/cmd/btn_4_label\" -m \"A\" -r\nmosquitto_pub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/cmd/btn_5_label\" -m \"Message\" -r\nmosquitto_pub -h 192.168.0.109 -p 1883 -t \"homebuttons/Home Buttons Kitchen/cmd/btn_6_label\" -m \"4 you\" -r\n</code></pre>"},{"location":"minimal/#additional-setup","title":"Additional setup","text":"<p>Please read the mosquitto documentation for more info about the configuration options. It's likely that you will at least want to add authentication to your MQTT broker.</p>"},{"location":"industrial/","title":"Home Buttons Industrial","text":"<p>Features:</p> <ul> <li>Rugged industrial design with outstanding tactile feedback</li> <li>Illuminated momentary buttons (adjustable brightness)</li> <li>Buttons can be configured as triggers or switches</li> <li>Kill switch</li> <li>Wi-Fi connectivity</li> <li>Power options: USB-C (2 m cable included) or 7-32 V DC power</li> </ul>"},{"location":"industrial/#getting-started","title":"Getting Started","text":"<p>Set up you device with the help of Getting Started guide.</p>"},{"location":"industrial/#where-to-get","title":"Where To Get","text":"<p>You can buy Home Buttons Industrial on Tindie or Lectronz.</p> <p></p> <p></p>"},{"location":"industrial/#technical-specifications","title":"Technical Specifications","text":""},{"location":"industrial/#physical","title":"Physical","text":"<ul> <li>Width: 45 mm</li> <li>Height: 200 mm</li> <li>Depth: 45 mm</li> <li>Metal buttons</li> <li>Aluminum enclosure</li> <li>Weight: 380 g</li> </ul>"},{"location":"industrial/#user-interface","title":"User Interface","text":"<ul> <li>4x Illuminated momentary button<ul> <li>Different colors</li> <li>Adjustable brightness</li> <li>Can be configured as a trigger or a switch</li> </ul> </li> <li>1x Kill switch<ul> <li>Rotate to reset</li> </ul> </li> </ul>"},{"location":"industrial/#connectivity","title":"Connectivity","text":"<ul> <li>2.4Ghz WiFi<ul> <li>MQTT protocol (Supports MQTT Discovery)</li> </ul> </li> <li>USB Type-C connector<ul> <li>Charging</li> <li>Firmware update (USB DFU mode)</li> <li>Debug messages (USB CDC mode)</li> </ul> </li> </ul>"},{"location":"industrial/#soc","title":"SoC","text":"<ul> <li>ESP32-S2<ul> <li>Xtensa\u00ae Single\u00adCore 32\u00adbit LX7</li> <li>Integrated WiFi modem: IEEE 802.11 b/g/n (2.4 GHz Wi\u00adFi)</li> </ul> </li> <li>Supports OTA (Over-The-Air firmware update)</li> <li>Native USB for firmware update and debug</li> <li>Advanced security features</li> </ul>"},{"location":"industrial/#power","title":"Power","text":"<ul> <li>Options<ul> <li>Any USB-C power supply via included 2 m USB-C cable</li> <li>7-32 V DC power supply (USB-C cable )</li> </ul> </li> </ul>"},{"location":"industrial/mqtt_topics/","title":"MQTT Topics","text":"<p>Home Buttons uses MQTT to communicate with you smart home.</p> <p>Here is a list of topics that are used by the device:</p> Topic Description Retained {BASE_TOPIC}/{DEVICE_NAME}/available Online status of the device. \"online\" or \"offline\" is published to this topic. Yes {BASE_TOPIC}/{DEVICE_NAME}/system_state A json object with info like uptime, Wi-Fi signal strength, etc. Yes {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4} When button {1-4} is pressed, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4}_double When button {1-4} is pressed 2 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4}_triple When button {1-4} is pressed 3 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4}_quad When button {1-4} is pressed 4 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/switch_{1-4} Switch {1-4} state. \"ON\" or \"OFF\". No {BASE_TOPIC}/{DEVICE_NAME}/cmd/switch_{1-4} Switch {1-4} command. \"ON\" or \"OFF\". No {BASE_TOPIC}/{DEVICE_NAME}/led_amb_bright Ambient LED brightness state. No {BASE_TOPIC}/{DEVICE_NAME}/cmd/led_amb_bright Ambient LED brightness command. No <ul> <li>{BASE_TOPIC} - Configured during setup. Default is homebuttons.</li> <li>{DEVICE_NAME} - Name of device as configured during setup and shown in Home Assistant</li> </ul>"},{"location":"industrial/setup/","title":"Getting Started","text":"<p>Setup up your Home Buttons Industrial in a few simple steps!</p> <p>You will need:</p> <ol> <li>Depending on the desired power source (one out of):<ul> <li>USB-C power brick</li> <li>7-32 V DC power supply with a cable</li> </ul> </li> <li>2x mounting screws with anchors suitable for your walls or double sided tape (must stick to plastic well)</li> <li>A Wi-Fi network</li> <li>An MQTT broker</li> <li>Home Assistant (optional - can work only through MQTT)</li> </ol>"},{"location":"industrial/setup/#connect-power","title":"Connect Power","text":"<p>The device comes with a 2 m USB-C cable attached. Just plug it into a USB-C power brick.</p> <p>Alternatively, you can connect a 7 - 32 V DC power supply to the screw terminals directly:</p> <ol> <li>Unscrew 4 screws holding the front panel of the device and carefully remove it.</li> <li>Disconnect the USB-C cable connector</li> <li>Unscrew the cable gland. Feed some cable into the case to expose the safety zip tie and cut it off carefully. Now you can pull the cable out (connector fits through the gland)</li> <li>Remove the connector adapter board from the screw terminals</li> <li>Route you cable through the gland and connect the wires to GND and VIN terminals (see markings on PCB).</li> <li>You can use the PCB tab in front of the screw terminals to secure the cable with a zip tie.</li> </ol> <p></p> <p>Make sure to connect the wires correctly. The red wire is positive, and the black wire is negative.</p>"},{"location":"industrial/setup/#set-up-mqtt-broker","title":"Set Up MQTT Broker","text":"<p>Home Buttons requires an MQTT broker. If you don't already use it, you should install one now. See this page for more information. Usually, the simplest way is to install Mosquitto MQTT as a Home Assistant add-on.</p> <p>If you're using Mosquitto MQTT add-on, you must use username and password of your Home Assistant account. It's recommended to create a new account for use with MQTT.</p> <p>If you don't use Home Assistant, see Minimal Setup guide.</p>"},{"location":"industrial/setup/#setup_wifi","title":"Set Up Wi-Fi Connection","text":"<p>After connecting the power, button will start pulsing. This indicates that Home Buttons is in settings menu. Press the  orange button to start Wi-Fi setup. The  orange button will start pulsing.</p> <p>Settings menu exits automatically after 30 seconds. To re-enter the settings menu, press and hold any 2 buttons simultaneously until the button lights start pulsing.</p> <ol> <li> <p>Home Buttons establishes a Wi-Fi hotspot for configuration. Connect to the network named <code>HB-XXXXXX</code> with your device. The password is <code>password123</code>.</p> </li> <li> <p>After connecting to the Wi-Fi network with your device, a captive portal will pop up automatically. If it doesn't, open the web browser and navigate to http://192.168.4.1.</p> <p></p> </li> <li> <p>Click on <code>Configure WiFi</code> and wait a few seconds for a list of networks to appear.</p> </li> <li> <p>Select your network, enter the password and click <code>Save</code>.</p> </li> </ol> <p>Home Buttons will disable the hotspot and connect to your selected Wi-Fi network in a few seconds. The  orange button will blink 2 times. Home Buttons will continue by starting the MQTT setup.  Red button will start to first blink quickly and then pulse. You can continue with the next step.</p> <p>If the  orange button doesn't stop pulsing, the connection was not successful. Please check the password and try again. Press any button to stop the Wi-Fi setup. Home Buttons will return to the settings menu. Repeat the Wi-Fi setup by pressing the  orange button.</p>"},{"location":"industrial/setup/#setup_mqtt","title":"Set Up MQTT connection","text":"<p>When connected to the Wi-Fi, Home Buttons can be configured using any device on your local network.</p> <p>After connecting to Wi-Fi, Home Buttons will start the MQTT setup automatically. The  red button will start pulsing.</p> <p>If the setup doesn't start automatically, open the settings menu by pressing and holding any 2 buttons simultaneously until the button lights start pulsing. Then press the  red button to start the MQTT setup.</p> <ol> <li> <p>Navigate to the setup page via the web browser at <code>http://HB-XXXXXX.local</code>. Please see the label on the device for the exact address. The setup page will load:</p> <p></p> </li> <li> <p>Click <code>Setup</code></p> </li> <li> <p>Enter the connection parameters:</p> <ul> <li> <p><code>Device Name</code> - Name of your device as it will appear in Home Assistant.</p> </li> <li> <p><code>MQTT Server</code> - IP address of your MQTT broker. Usually the same as IP of your Home Assistant server.</p> </li> <li> <p><code>MQTT Port</code> - Port used by MQTT broker. The default is usually 1883.</p> </li> <li> <p><code>MQTT User</code> - MQTT user name (can be empty if not required by broker).</p> </li> <li> <p><code>MQTT Password</code> - MQTT password (can be empty if not required by broker).</p> </li> <li> <p><code>Base Topic</code> - MQTT topic that will be prepended to all topics used by Home Buttons. The default is <code>homebuttons</code>.</p> </li> <li> <p><code>Discovery Prefix</code> - Home Assistant parameter for MQTT discovery. The default is <code>homeassistant</code>. Leave that unchanged if you haven't modified Home Assistant's configuration.</p> </li> </ul> </li> <li> <p>Enter static IP details (optional):</p> <ul> <li> <p><code>Static IP</code> - IP of Home Buttons. Must be outside the DHCP address range of your router.</p> </li> <li> <p><code>Gateway</code> - The IP address of your router.</p> </li> <li> <p><code>Subnet Mask</code> - Usually <code>255.255.255.0.</code></p> </li> <li> <p><code>Primary DNS Server</code> - If left empty, <code>Gateway</code> IP will be used.</p> </li> <li> <p><code>Secondary DNS Server</code> - If left empty, <code>1.1.1.1</code> will be used.</p> </li> </ul> <p>Please double check that the IP address you enter is not already in use by another device on your network.</p> </li> <li> <p>Set button mode</p> <ul> <li><code>Button Config</code> - A string of 4 characters that represent the mode of each button. The default is <code>BBBB</code>. The characters represent buttons 1-4. You can select between a button (trigger) <code>B</code> or a switch (toggle) <code>S</code>.</li> </ul> </li> <li> <p>Confirm by clicking <code>Save</code>. The  red button will blink 2 times, indicating that the setup was successful.</p> </li> </ol> <p>If MQTT connection is not successful, the  red button will blink 5 times. You can start the setup again by entering the settings menu and pressing the  red button.</p>"},{"location":"industrial/setup/#set-up-home-assistant","title":"Set Up Home Assistant","text":"<p>Home Buttons uses MQTT Discovery and will appear in Home Assistant automatically.</p> <p>To get to the device's page in Home Assistant, click settings in the left side bar, then open Devices &amp; Services, move to the Devices tab and click on the name you gave your Home Buttons in the previous step.</p> <p></p> <p>Here you can see device info, switch states and led brightness.</p>"},{"location":"industrial/setup/#configure-button-actions","title":"Configure Button Actions","text":"<p>To configure button actions, click \"+\" on the Automations card, select one of the buttons and set up an automation with Home Assistant's editor.</p> <p></p>"},{"location":"industrial/setup/#whats-next","title":"What's next?","text":"<p>See User Guide for further information.</p>"},{"location":"industrial/update/","title":"Firmware Update","text":"<p>You can see the current firmware version in Home Assistant.  Find your Home Buttons in the device list and click it. Firmware version is displayed in the Device info card.</p> <p></p> <p>Firmware can be updated in a couple ways:</p> <ul> <li>Over The Air (OTA) using a web interface - recommended</li> <li>Online Flash Tool using a web browser and USB</li> <li>Esptool.py via USB</li> <li>Full Image Flash - repair a device that is not booting. Can be done via Esptool.py or Online Flash Tool.</li> </ul> <p>OTA is the simplest way and therefore recommended.</p>"},{"location":"industrial/update/#OTA","title":"Over The Air (OTA)","text":"<ol> <li> <p>Find the latest firmware here. Check release notes for any special update requirements. Make sure to select the correct file ending with <code>_industrial.bin</code>. Download it to your computer.</p> </li> <li> <p>Enter setup by going to the Settings Menu and pressing the  red button. </p> <p>Navigate to the setup page via the web browser at <code>http://HB-XXXXXX.local</code>. Please see the label on the device for the exact address.</p> <p></p> </li> <li> <p>Click <code>Info</code> and scroll to the bottom of the Info screen. Click <code>Update</code>. The update menu will load:</p> <p></p> </li> <li> <p>Click <code>Choose file</code> and select the previously downloaded .bin file on your computer.</p> </li> <li> <p>Click <code>Update</code> Wait a few seconds while the firmware is downloaded to the device. When done, <code>Update Successful</code> message will appear in your web browser and Home Buttons will reboot.</p> <p></p> </li> </ol>"},{"location":"industrial/update/#online","title":"Online Flash Tool","text":"<p>Flash your device from your web browser.</p> <ol> <li> <p>Connect Home Buttons to your computer using the USB-C cable.</p> </li> <li> <p>Go to nplan.github.io/HomeButtonsFlasher and follow the instructions.</p> </li> </ol> <p>Google Chrome and Microsoft Edge are supported</p>"},{"location":"industrial/update/#esptool","title":"Esptool.py","text":"<ol> <li> <p>Install esptool. If you already have Python installed, the easiest way is to install it using pip: </p> <pre><code>pip install esptool\n</code></pre> <p>See here for more installation details.</p> </li> <li> <p>Find the latest firmware here. Check release notes for any special update requirements. Make sure to select the correct file:</p> <ol> <li> <p>Update image - regular update</p> <p>Select file ending with <code>_industrial.bin</code>.</p> </li> <li> <p>Full image - to flash the entire device memory. This will erase all user data.</p> <p>Select file ending with <code>_industrial_full_image.bin</code>. </p> </li> </ol> <p>Download the file to your computer.</p> </li> <li> <p>Open the case. See instructions here.</p> </li> <li> <p>Place device into programming mode. Press and hold the <code>BOOT</code> button and then press the <code>RST</code> button. <code>BOOT LED</code> will light up. Release both buttons.</p> <p></p> </li> <li> <p>Connect Home Buttons to your computer using the USB-C cable.</p> </li> <li> <p>Determine port on you computer.</p> <p>Windows</p> <p>Open Device Manager and check Ports section.  If you're not sure which device is Home Buttons, disconnect it and then reconnect it.  See which port disappears and then appears again. Remember the COM## name.</p> <p>macOS and Linux</p> <p>Run the following command twice. First with Home Buttons connected and then disconnected. The port that is present the first time and not the second is the correct one.</p> <p>macOS</p> <pre><code>ls /dev/cu*\n</code></pre> <p>Linux</p> <pre><code>ls /dev/tty*\n</code></pre> <p>Copy the path of the correct port.</p> </li> <li> <p>Flash the firmware using esptool.</p> <p>Run this commands in Terminal or Command Prompt:</p> <ol> <li> <p>Update image - regular update</p> <p><pre><code>python -m esptool --port PORT --after no_reset erase_region 0xe000 0x2000\n</code></pre> <pre><code>python -m esptool --port PORT --after no_reset write_flash 0x10000 BIN_FILE_PATH\n</code></pre></p> <p>Substitute <code>PORT</code> with port that you determined in previous step. Substitute <code>BIN_FILE_PATH</code> with the path of downloaded firmware .bin file.</p> <p>The <code>erase_region</code> command resets the app partition boot switch. It's required to make sure the device will boot to the newly flashed firmware.</p> </li> <li> <p>Full image - to flash the entire device memory. This will erase all user data.</p> <pre><code>python -m esptool --port PORT --after no_reset write_flash 0x0 BIN_FILE_PATH\n</code></pre> <p>Substitute <code>PORT</code> with port that you determined in previous step. Substitute <code>BIN_FILE_PATH</code> with the path of downloaded firmware .bin file.</p> </li> </ol> </li> <li> <p>Wait a few seconds for firmware to flash. When done, you will see a confirmation in Terminal or Command Prompt window.</p> </li> <li> <p>Disconnect USB-C cable and press the <code>RST</code> button.</p> </li> </ol>"},{"location":"industrial/update/#full_image","title":"Full Image Flash","text":"<p>This method flashes the entire device memory. It can be used to repair a device that is not booting.</p> <p>Important! User data will be lost. This includes button labels, WiFi credentials, MQTT settings, etc.</p> <p>You can flash your device via:</p> <ul> <li>Online Flash Tool - follow the instructions above. Select <code>Full Image</code> in the online tool prior to flashing.</li> <li>Esptool.py - follow the instructions above. Download the correct image when required.</li> </ul>"},{"location":"industrial/user_guide/","title":"User guide","text":""},{"location":"industrial/user_guide/#controlling-the-device","title":"Controlling The Device","text":"<ul> <li>Settings Menu - hold any two buttons together for 5 s</li> </ul>"},{"location":"industrial/user_guide/#home-assistant","title":"Home Assistant","text":"<p>You can configure most of the settings directly in Home Assistant.</p> <p>To get to the device's page in Home Assistant, click settings in the left side bar, then open Devices &amp; Services, move to the Devices tab and click on the name you gave your Home Buttons during setup.</p> <p></p>"},{"location":"industrial/user_guide/#configure-button-actions","title":"Configure Button Actions","text":"<p>To configure button actions, click \"+\" on the Automations card, select one of the buttons and set up an automation with Home Assistant's editor.</p> <p></p>"},{"location":"industrial/user_guide/#settings","title":"Settings Menu","text":"<p>Open the Settings Menu by holding any two buttons together for 5 seconds. The buttons will start to pulse. You can navigate the menu by pressing the corresponding button:</p> <ul> <li> red button - Setup</li> <li> orange button - Wi-Fi Setup</li> <li> blue button - Restart</li> <li> green button - Close settings menu</li> </ul> <p>Factory Reset</p> <p>To perform a factory reset, hold the  blue button for 10 seconds. Home Buttons will restart and all user settings will be reset to default. You will have to set up the device again.</p>"},{"location":"industrial/user_guide/#setup","title":"Setup","text":"<p>Setup allows you to change connection settings and other configuration options. Home Buttons establishes a web interface accessible within the network it is already connected to.</p> <p>Enter setup by going to the Settings Menu and pressing the  red button. </p> <p>The  red button will start to first blink quickly and then pulse.</p> <p>It the quick blinking doesn't stop, the device could not connect to the network. Please check the Wi-Fi settings.</p> <p>Navigate to the setup page via the web browser at <code>http://HB-XXXXXX.local</code>. Please see the label on the device for the exact address.</p> <p></p>"},{"location":"industrial/user_guide/#change-wi-fi-settings","title":"Change Wi-Fi settings","text":"<p>Click <code>Configure WiFi</code> to change Wi-Fi connection settings. Select a network, enter the password and click save. Wait a few seconds and then press any button to exit setup. Home Buttons will connect to the newly selected Wi-Fi network.</p>"},{"location":"industrial/user_guide/#change-mqtt-settings-button-labels","title":"Change MQTT settings &amp; Button labels","text":"<p>Click <code>Setup</code> to change MQTT settings or button labels. A page with the following parameters will open:</p> <ul> <li> <p><code>Device Name</code> - Name of your device as it will appear in Home Assistant.</p> </li> <li> <p><code>MQTT Server</code> - IP address of your MQTT broker. Usually the same as IP of your Home Assistant server.</p> </li> <li> <p><code>MQTT Port</code> - Port used by MQTT broker. The default is usually 1883.</p> </li> <li> <p><code>MQTT User</code> - MQTT user name (can be empty if not required by broker).</p> </li> <li> <p><code>MQTT Password</code> - MQTT password (can be empty if not required by broker).</p> </li> <li> <p><code>Base Topic</code> - MQTT topic that will be prepended to all topics used by Home Buttons. The default is <code>homebuttons</code>.</p> </li> <li> <p><code>Discovery Prefix</code> - Home Assistant parameter for MQTT discovery. The default is <code>homeassistant</code>. Leave that unchanged if you haven't modified Home Assistant's configuration.</p> </li> <li> <p><code>Static IP</code> - Optional. IP of Home Buttons. Must be outside the DHCP address range of your router.</p> </li> <li> <p><code>Gateway</code> - Optional. The IP address of your router.</p> </li> <li> <p><code>Subnet Mask</code> Optional. Usually <code>255.255.255.0.</code></p> </li> <li> <p><code>Primary DNS Server</code> - If left empty, <code>Gateway</code> IP will be used.</p> </li> <li> <p><code>Secondary DNS Server</code> - If left empty, <code>1.1.1.1</code> will be used.</p> </li> <li> <p><code>Button Config</code> - A string of 4 characters that represent the mode of each button. The default is <code>BBBB</code>. The characters represent buttons 1-4. You can select between a button (trigger) <code>B</code> or a switch (toggle) <code>S</code>.</p> </li> </ul> <p>When done, click <code>Save</code>. The  red button will blink 2 times, indicating that the setup was successful.</p> <p>If MQTT connection is not successful, the  red button will blink 5 times. You can start the setup again by entering the settings menu and pressing the  red button.</p>"},{"location":"industrial/user_guide/#wifi_setup","title":"Wi-Fi Setup","text":"<p>If Home Buttons becomes inaccessible on the local network due to changed Wi-Fi settings, you can restart the Wi-Fi setup at any time.</p> <p>Open Settings Menu by holding any two buttons together for 5 s and press . Wi-Fi hotspot will be established.</p> <ol> <li> <p>Home Buttons establishes a Wi-Fi hotspot for configuration. Connect to the network named <code>HB-XXXXXX</code> with your device. The password is <code>password123</code>.</p> </li> <li> <p>After connecting to the Wi-Fi network with your device, a captive portal will pop up automatically. If it doesn't, open the web browser and navigate to http://192.168.4.1.</p> <p></p> </li> <li> <p>Click on <code>Configure WiFi</code> and wait a few seconds for a list of networks to appear.</p> </li> <li> <p>Select your network, enter the password and click <code>Save</code>.</p> </li> </ol> <p>Home Buttons will disable the hotspot and connect to your selected Wi-Fi network in a few seconds. The  orange button will blink 2 times.</p> <p>If the  orange button doesn't stop pulsing, the connection was not successful. Please check the password and try again. Press any button to stop the Wi-Fi setup. To repeat the Wi-Fi setup, enter the settings menu and press the  orange button.</p>"},{"location":"industrial/user_guide/#sync-switch-to-a-device","title":"Sync switch to a device","text":"<p>The button must be in switch mode to sync it with a device. To change the mode, enter the Settings Menu and press the  red button. Navigate to the web interface at <code>http://HB-XXXXXX.local</code>. In the button field <code>Button Config</code> change the mode of the button to <code>S</code>. Click save.</p> <ol> <li> <p>In Home Assistant, go to Settings -&gt; Devices &amp; services -&gt; Devices tab -&gt; your Home Buttons and verify that the button is displaying as a switch</p> </li> <li> <p>Add the Linked Entities blueprint to your Home Assistant</p> <p></p> </li> <li> <p>In Home Assistant, go to Settings -&gt; Automations &amp; scenes -&gt; Blueprint tab -&gt; Linked Entities</p> </li> <li> <p>Select the Home Buttons switch entity as the first entity</p> </li> <li> <p>Select the device you want to sync with as the second entity</p> </li> <li> <p>Save</p> </li> </ol> <p>The switch will now be synced with the device. The state of the switch will reflect the state of the device.</p>"},{"location":"industrial/user_guide/#opening_case","title":"Opening The Case","text":"<p>Unscrew 4 screws holding the front panel of the device. Carefully remove the front panel. Be careful not to strain the button wires.</p> <p></p>"},{"location":"mini/","title":"Home Buttons Mini","text":"<p>Features:</p> <ul> <li>4 push buttons, multiple press support</li> <li>1.5\" e-paper display</li> <li>Material Design Icons </li> <li>Wi-Fi connectivity</li> <li>Less than 1 second from button press to triggered action (depending on your network)</li> <li>Temperature &amp; humidity sensor</li> <li>2x AA batteries</li> <li>1-2 year battery life</li> <li>Compact size: 64 x 64 x 20 mm</li> </ul>"},{"location":"mini/#getting-started","title":"Getting Started","text":"<p>Set up you device with the help of Getting Started guide.</p>"},{"location":"mini/#where-to-get","title":"Where To Get","text":"<p>You can buy Home Buttons on Tindie or Lectronz.</p> <p></p> <p></p>"},{"location":"mini/#technical-specifications","title":"Technical Specifications","text":""},{"location":"mini/#physical","title":"Physical","text":"<ul> <li>Width: 63.6 mm</li> <li>Height: 63.6 mm</li> <li>Depth: 20.0 mm</li> <li>Weight: 90 g (incl. batteries)</li> <li>Casing material: PETG (3D printed)</li> </ul>"},{"location":"mini/#user-interface","title":"User Interface","text":"<ul> <li>E-paper display</li> <li>4 tactile buttons with LED illumination</li> </ul>"},{"location":"mini/#display","title":"Display","text":"<ul> <li>Type: Single color E-paper (non-illuminated)</li> <li>Size: 1.5\"</li> <li>Resolution: 200 x 200</li> <li>Model number: Good Display GDEY0154D67</li> </ul>"},{"location":"mini/#connectivity","title":"Connectivity","text":"<ul> <li>2.4Ghz WiFi<ul> <li>MQTT protocol (Supports MQTT Discovery)</li> </ul> </li> </ul>"},{"location":"mini/#soc","title":"SoC","text":"<ul> <li>ESP32-S2<ul> <li>Xtensa\u00ae Single\u00adCore 32\u00adbit LX7</li> <li>Integrated WiFi modem: IEEE 802.11 b/g/n (2.4 GHz Wi\u00adFi)</li> </ul> </li> <li>Supports OTA (Over-The-Air firmware update)</li> <li>Advanced security features</li> </ul>"},{"location":"mini/#environmental-sensor","title":"Environmental Sensor","text":"<ul> <li>Sensirion SHTC3 high accuracy Temperature and Relative Humidity sensor</li> <li>Temperature accuracy: \u00b10.2\u00b0C (0\u00b0C to 60\u00b0C)</li> <li>Humidity accuracy: \u00b12% RH (20% RH to 80% RH)</li> </ul>"},{"location":"mini/#batteries","title":"Batteries","text":"<p>Home Buttons mini uses two AA alkaline batteries. They prove to be a good compromise between capacity, size, price and availability. A pair should last you about two years for the following use case:</p> <ul> <li>Varta Industrial Pro AA</li> <li>30 minutes sensor interval (for temperature / humidity reporting)</li> <li>20 button presses per day</li> <li>WPA-2 Wi-Fi security</li> </ul> <p>Battery life might be shorter if you use Home Buttons more often or if you use WPA-3 WiFi security. It can be extended by increasing the sensor interval (you can do that from Home Assistant or the setup page) or setting up static IP.</p> <p>Always use high quality alkaline batteries from a reputable brand. During WiFi communication, the device needs large bursts of power, which low-quality batteries might not be able to provide, decreasing your battery life drastically.</p>"},{"location":"mini/mqtt_topics/","title":"MQTT Topics","text":"<p>Home Buttons uses MQTT to communicate with you smart home.</p> <p>Here is a list of topics that are used by the device:</p> Topic Description Retained {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4} When button {1-4} is pressed, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4}_double When button {1-4} is pressed 2 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4}_triple When button {1-4} is pressed 3 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-4}_quad When button {1-4} is pressed 4 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/temperature Temperature in \u00b0C or \u00b0F, depending on the setup choice. Published on button press and every N minutes, specified by Sensor Interval. No {BASE_TOPIC}/{DEVICE_NAME}/humidity Relative humidity in %. Published on button press and  every  N minutes, specified by Sensor Interval. No {BASE_TOPIC}/{DEVICE_NAME}/battery Battery charge in %. Published on button press and  every  N minutes, specified by Sensor Interval. No {BASE_TOPIC}/{DEVICE_NAME}/btn_{1-4}_label Current label of button {1-4}. Yes {BASE_TOPIC}/{DEVICE_NAME}/sensor_interval Current sensor publish interval in minutes. Yes {BASE_TOPIC}/{DEVICE_NAME}/awake_mode Current state of Awake mode Yes {BASE_TOPIC}/{DEVICE_NAME}/awake_mode/availability Indicates when Awake mode is available (available only when DC power source is connected). \"online\" or \"offline\" Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/btn_{1-4}_label Command to change label of button {1-4} to new value. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/sensor_interval Command to change sensor publish interval. 5 - 60 minutes. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/awake_mode Command to change Awake mode setting. \"ON\" or \"OFF. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/disp_msg Display a custom message on device. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/schedule_wakeup Schedule next wakeup. Value in seconds. Topic cleared by device when received. Yes <ul> <li>{BASE_TOPIC} - Configured during setup. Default is homebuttons.</li> <li>{DEVICE_NAME} - Name of device as configured during setup and shown in Home Assistant</li> </ul>"},{"location":"mini/setup/","title":"Getting Started","text":"<p>Setup up your Home Buttons in a few simple steps!</p> <p>You will need:</p> <ol> <li>2x AA batteries</li> <li>If mounting to the wall: 2x mounting screws with anchors suitable for your walls or double sided tape (must stick to plastic well)</li> <li>A Wi-Fi network</li> <li>An MQTT broker</li> <li>Home Assistant (optional - can work only through MQTT)</li> </ol>"},{"location":"mini/setup/#insert-batteries","title":"Insert Batteries","text":"<p>You need two AA batteries. Please use high quality alkaline batteries for best battery life.</p> <ol> <li> <p>Open the back cover by pressing the tab on the bottom of the device.</p> </li> <li> <p>Insert the battery cells. Be careful to orient it so that polarity matches markings on the PCB.</p> <p></p> </li> <li> <p>Replace the back cover by aligning it first at the top and then pressing it down until it clicks.</p> <p></p> </li> </ol>"},{"location":"mini/setup/#setup_wifi","title":"Set Up Wi-Fi Connection","text":"<p>After inserting the batteries, press any button to wake the device and start Wi-Fi setup procedure.</p> <p>If you don't complete the setup in 10 minutes, Home Buttons will turn off again to save battery. Press any button to wake the device and start again.</p> <ol> <li> <p>Home Buttons establishes a Wi-Fi hotspot for configuration. Connect to it by scanning the QR code on the display or manually connecting to Wi-Fi network and entering the password.</p> <p></p> <p>The Wi-Fi password is <code>password123</code>.</p> </li> <li> <p>After connecting to Home Buttons Wi-Fi with your device, a captive portal will pop up automatically. If it doesn't, open the web browser and navigate to http://192.168.4.1.</p> <p></p> </li> <li> <p>Click on <code>Configure WiFi</code> and wait a few seconds for a list of networks to appear.</p> </li> <li> <p>Select your network, enter the password and click <code>Save</code>.</p> </li> </ol> <p>Home Buttons will disable the hotspot and connect to your Wi-Fi network in a few seconds. <code>Wi-Fi connected</code> will appear on display.</p> <p>If connection is not successful, <code>Wi-Fi connection error</code> will be displayed and Home Buttons will return to welcome screen. You can start Wi-Fi setup again by pressing any button. Please make sure to enter the password correctly.</p>"},{"location":"mini/setup/#set-up-mqtt-broker","title":"Set Up MQTT Broker","text":"<p>Home Buttons requires an MQTT broker. If you don't already use it, you should install one now. See this page for more information. Usually, the simplest way is to install Mosquitto MQTT as a Home Assistant add-on.</p> <p>If you're using Mosquitto MQTT add-on, you must use username and password of your Home Assistant account. It's recommended to create a new account for use with MQTT.</p> <p>If you don't use Home Assistant, see Minimal Setup guide.</p>"},{"location":"mini/setup/#setup_mqtt","title":"Set Up MQTT connection","text":"<p>When connected to the Wi-Fi, Home Buttons can be configured using any device on your local network.</p> <ol> <li> <p>Scan the QR code or enter the local IP into a web browser. The setup page will load:</p> <p></p> </li> <li> <p>Click <code>Setup</code></p> </li> <li> <p>Enter the connection parameters:</p> <ul> <li> <p><code>Device Name</code> - Name of your device as it will appear in Home Assistant.</p> </li> <li> <p><code>MQTT Server</code> - IP address of your MQTT broker. Usually the same as IP of your Home Assistant server.</p> </li> <li> <p><code>MQTT Port</code> - Port used by MQTT broker. The default is usually 1883.</p> </li> <li> <p><code>MQTT User</code> - MQTT user name (can be empty if not required by broker).</p> </li> <li> <p><code>MQTT Password</code> - MQTT password (can be empty if not required by broker).</p> </li> <li> <p><code>Base Topic</code> - MQTT topic that will be prepended to all topics used by Home Buttons. The default is <code>homebuttons</code>.</p> </li> <li> <p><code>Discovery Prefix</code> - Home Assistant parameter for MQTT discovery. The default is <code>homeassistant</code>. Leave that unchanged if you haven't modified Home Assistant's configuration.</p> </li> <li> <p><code>Temperature Unit</code> - Either <code>C</code> - Celsius  or <code>F</code> - Fahrenheit.</p> </li> </ul> </li> <li> <p>Enter static IP details (optional):</p> <ul> <li> <p><code>Static IP</code> - IP of Home Buttons. Must be outside the DHCP address range of your router.</p> </li> <li> <p><code>Gateway</code> - The IP address of your router.</p> </li> <li> <p><code>Subnet Mask</code> - Usually <code>255.255.255.0.</code></p> </li> <li> <p><code>Primary DNS Server</code> - If left empty, <code>Gateway</code> IP will be used.</p> </li> <li> <p><code>Secondary DNS Server</code> - If left empty, <code>1.1.1.1</code> will be used.</p> </li> </ul> <p>This parameters are optional, but highly recommended, to reduce response time and increase battery life. Especially if you use a WPA-3 network.</p> <p>Please double check that the IP address you enter is not already in use by another device on your network.</p> </li> <li> <p>Enter button labels</p> <p>This step is not necessary, you can do it later directly in Home Assistant.</p> <ul> <li><code>Button {1-4} Label</code> - Label that will be displayed next to each button.</li> </ul> </li> <li> <p>Confirm by clicking <code>Save</code>. Device will exit the setup and display button labels.</p> </li> </ol> <p>If MQTT connection is not successful, <code>MQTT error</code> will be displayed and Home Buttons will return to welcome screen. You can start the setup again by pressing any button. Please make sure to enter correct MQTT parameters.</p>"},{"location":"mini/setup/#set-up-home-assistant","title":"Set Up Home Assistant","text":"<p>Home Buttons uses MQTT Discovery and will appear in Home Assistant automatically.</p> <p>To get to the device's page in Home Assistant, click settings in the left side bar, then open Devices &amp; Services, move to the Devices tab and click on the name you gave your Home Buttons in the previous step.</p> <p></p> <p>Here you can see device info, sensor readings and battery level. You can also configure button labels,  button actions and sensor publish interval.</p>"},{"location":"mini/setup/#configure-button-icons","title":"Configure Button Icons","text":"<p>In the Controls card, enter the name of the icon, that you want to be shown on the e-paper display. Icons will be updated next time you press a button or on the next sensor update interval.</p> <p>You can choose any of the Material Design Icons. Enter the icon name in the label field in the format <code>mdi:{icon name}</code>. For example, <code>mdi:lightbulb-auto-outline</code>.</p> <p>Icons are downloaded from a Github repository. For that purpose an internet connection is required. Once downloaded, the icons are stored permanently on the device. If you do not wish to have Home Buttons connected to the internet, you can set up the icons once and then disable internet access.</p>"},{"location":"mini/setup/#configure-button-actions","title":"Configure Button Actions","text":"<p>To configure button actions, click \"+\" on the Automations card, select one of the buttons and set up an automation with Home Assistant's editor.</p> <p></p> <p>The expected delay from a button being pressed to the automation being triggered is around 1 second (depending on your network).</p>"},{"location":"mini/setup/#mount-to-the-wall","title":"Mount To The Wall","text":"<p>Mount the back cover of Home Buttons to the wall. There are 2 options:</p> <ol> <li> <p>Screws</p> <p>Use two screws (max diameter 4.5 mm) with anchors suitable for your walls (not included).</p> </li> <li> <p>Tape</p> <p>Use double sided tape (not included). Use only high quality heavy duty foam mounting tape. A small patch of size around 1 x 1 cm in each corner works best.</p> </li> </ol> <p>Make sure the arrow is pointing upwards!</p>"},{"location":"mini/setup/#other-important-information","title":"Other Important Information","text":""},{"location":"mini/setup/#battery-life","title":"Battery life","text":"<p>The expected battery life is between 1 to 2 years with high quality AA batteries. When the battery is getting low, Home Buttons will remind you to replace batteries after pressing a button. If the batteries get critically low, the device will turn off. The display will show: <code>TURNED OFF PLEASE REPLACE BATTERIES</code>. You can see the remaining battery percentage as a sensor in Home Assistant.</p>"},{"location":"mini/setup/#temperature-humidity","title":"Temperature &amp; Humidity","text":"<p>Home Buttons includes a high precision temperature and humidity sensor. The readings are taken every few minutes (configurable) and on every button press. The values are displayed as sensors in Home Assistant. </p> <p>You can bring up a display of current temperature, humidity &amp; battery level by pressing any button for 2 seconds. The device will automatically revert to showing button labels in 30 seconds. Or do that manually by pressing any button again.</p>"},{"location":"mini/setup/#whats-next","title":"What's next?","text":"<p>See User Guide for further information.</p>"},{"location":"mini/update/","title":"Firmware Update","text":"<p>You can see the current firmware version in Home Assistant.  Find your Home Buttons in the device list and click it. Firmware version is displayed in the Device info card.</p> <p></p> <p>Firmware can be updated in a couple ways:</p> <ul> <li>Over The Air (OTA) using a web interface - recommended</li> <li>Online Flash Tool using a web browser and USB to Serial adapter</li> <li>Esptool.py via USB to Serial adapter</li> <li>Full Image Flash - repair a device that is not booting. Can be done via Esptool.py or Online Flash Tool.</li> </ul> <p>OTA is the simplest way and therefore recommended.</p>"},{"location":"mini/update/#OTA","title":"Over The Air (OTA)","text":"<ol> <li> <p>Find the latest firmware here. Check release notes for any special update requirements. Make sure to select the correct file ending with <code>_mini.bin</code>. Download it to your computer.</p> </li> <li> <p>Enter Setup from the Settings Menu. Home Buttons will display instructions for connecting to a web interface. Scan the QR code or enter the local IP into a web browser.</p> <p></p> </li> <li> <p>Click <code>Info</code> and scroll to the bottom of the Info screen. Click <code>Update</code>. The update menu will load:</p> <p></p> </li> <li> <p>Click <code>Choose file</code> and select the previously downloaded .bin file on your computer.</p> </li> <li> <p>Click <code>Update</code> Wait a few seconds while the firmware is downloaded to the device. When done, <code>Update Successful</code> message will appear in your web browser and Home Buttons will reboot.</p> <p></p> </li> </ol>"},{"location":"mini/update/#online","title":"Online Flash Tool","text":"<p>Flash your device from your web browser.</p> <ol> <li> <p>Connect Home Buttons to your computer using an USB to Serial adapter.</p> <p>Important: Adapter should be set to 3.3 V logic level.</p> <ul> <li>Connect GND of adapter to GND of Home Buttons</li> <li>Connect TX of adapter to RX of Home Buttons</li> <li>Connect RX of adapter to TX of Home Buttons</li> </ul> <p>The batteries must stay inserted during the update process.</p> <p>Pins are located on the right edge of the PCB:</p> <p></p> <p>Depending on your adapter, it might be possible to plugin its header directly into Home Buttons. But double check the pin order first.</p> </li> <li> <p>Go to nplan.github.io/HomeButtonsFlasher and follow the instructions.</p> </li> </ol> <p>Google Chrome and Microsoft Edge are supported</p>"},{"location":"mini/update/#esptool","title":"Esptool.py","text":"<ol> <li> <p>Install esptool. If you already have Python installed, the easiest way is to install it using pip: </p> <pre><code>pip install esptool\n</code></pre> <p>See here for more installation details.</p> </li> <li> <p>Find the latest firmware here. Check release notes for any special update requirements. Make sure to select the correct file:</p> <ol> <li> <p>Update image - regular update</p> <p>Select file ending with <code>_mini.bin</code>.</p> </li> <li> <p>Full image - to flash the entire device memory. This will erase all user data.</p> <p>Select file ending with <code>_mini_full_image.bin</code>. </p> </li> </ol> <p>Download the file to your computer.</p> </li> <li> <p>Open the case. See instructions here.</p> </li> <li> <p>Place device into programming mode. Press and hold the <code>BOOT</code> button and then press the <code>RST</code> button. <code>BOOT LED</code> will light up. Release both buttons.</p> <p></p> </li> <li> <p>Connect Home Buttons to your computer using an USB to Serial adapter.</p> <p>Important: Adapter should be set to 3.3 V logic level.</p> <ul> <li>Connect GND of adapter to GND of Home Buttons</li> <li>Connect TX of adapter to RX of Home Buttons</li> <li>Connect RX of adapter to TX of Home Buttons</li> </ul> <p>The batteries must stay inserted during the update process.</p> <p>Pins are located on the right edge of the PCB:</p> <p></p> <p>Depending on your adapter, it might be possible to plugin its header directly into Home Buttons. But double check the pin order first.</p> </li> <li> <p>Determine port on you computer.</p> <p>Windows</p> <p>Open Device Manager and check Ports section.  If you're not sure which device is Home Buttons, disconnect it and then reconnect it.  See which port disappears and then appears again. Remember the COM## name.</p> <p>macOS and Linux</p> <p>Run the following command twice. First with Home Buttons connected and then disconnected. The port that is present the first time and not the second is the correct one.</p> <p>macOS</p> <pre><code>ls /dev/cu*\n</code></pre> <p>Linux</p> <pre><code>ls /dev/tty*\n</code></pre> <p>Copy the path of the correct port.</p> </li> <li> <p>Flash the firmware using esptool.</p> <p>Run this commands in Terminal or Command Prompt:</p> <ol> <li> <p>Update image - regular update</p> <p><pre><code>python -m esptool --port PORT --after no_reset erase_region 0xe000 0x2000\n</code></pre> <pre><code>python -m esptool --port PORT --after no_reset write_flash 0x10000 BIN_FILE_PATH\n</code></pre></p> <p>Substitute <code>PORT</code> with port that you determined in previous step. Substitute <code>BIN_FILE_PATH</code> with the path of downloaded firmware .bin file.</p> <p>The <code>erase_region</code> command resets the app partition boot switch. It's required to make sure the device will boot to the newly flashed firmware.</p> </li> <li> <p>Full image - to flash the entire device memory. This will erase all user data.</p> <pre><code>python -m esptool --port PORT --after no_reset write_flash 0x0 BIN_FILE_PATH\n</code></pre> <p>Substitute <code>PORT</code> with port that you determined in previous step. Substitute <code>BIN_FILE_PATH</code> with the path of downloaded firmware .bin file.</p> </li> </ol> </li> <li> <p>Wait a few seconds for firmware to flash. When done, you will see a confirmation in Terminal or Command Prompt window.</p> </li> <li> <p>Disconnect the USB to Serial adapter and press the <code>RST</code> button.</p> </li> </ol>"},{"location":"mini/update/#full_image","title":"Full Image Flash","text":"<p>This method flashes the entire device memory. It can be used to repair a device that is not booting.</p> <p>Important! User data will be lost. This includes button labels, WiFi credentials, MQTT settings, etc.</p> <p>You can flash your device via:</p> <ul> <li>Online Flash Tool - follow the instructions above. Select <code>Full Image</code> in the online tool prior to flashing.</li> <li>Esptool.py - follow the instructions above. Download the correct image when required.</li> </ul>"},{"location":"mini/user_guide/","title":"User guide","text":""},{"location":"mini/user_guide/#controlling-the-device","title":"Controlling The Device","text":"<ul> <li>Info Screen - hold any button for 2 s</li> <li>Settings Menu - hold any two buttons together for 5 s</li> </ul> <p>Firmware v2.2.1 and below:</p> <ul> <li>Info Screen - hold any button for 2 s</li> <li>Settings Menu - hold any button for 5 s</li> </ul>"},{"location":"mini/user_guide/#home-assistant","title":"Home Assistant","text":"<p>You can configure most of the settings directly in Home Assistant.</p> <p>To get to the device's page in Home Assistant, click settings in the left side bar, then open Devices &amp; Services, move to the Devices tab and click on the name you gave your Home Buttons during setup.</p> <p></p>"},{"location":"mini/user_guide/#configure-button-icons","title":"Configure Button Icons","text":"<p>In the Controls card, enter the name of the icon, that you want to be shown on the e-paper display. Icons will be updated next time you press a button or on the next sensor update interval.</p> <p>You can choose any of the Material Design Icons. Enter the icon name in the label field in the format <code>mdi:{icon name}</code>. For example, <code>mdi:lightbulb-auto-outline</code>.</p> <p>Icons are downloaded from the Icon Server. For that purpose an internet connection is required. Once downloaded, the icons are stored permanently on the device. If you do not wish to have Home Buttons connected to the internet, you can set up the icons once and then disable internet access. Alternatively, you can host your own icon server. See Self Hosted Icon Server for more information.</p>"},{"location":"mini/user_guide/#configure-button-actions","title":"Configure Button Actions","text":"<p>To configure button actions, click \"+\" on the Automations card, select one of the buttons and set up an automation with Home Assistant's editor.</p> <p></p> <p>The expected delay from a button being pressed to the automation being triggered is around 1 second (depending on your network).</p>"},{"location":"mini/user_guide/#configure-button-actions_1","title":"Configure Button Actions","text":"<p>To configure button actions, click \"+\" on the Automations card, select one of the buttons and set up an automation with Home Assistant's editor.</p> <p></p> <p>The expected delay from a button being pressed to the automation being triggered is around 1 second (depending on your network).</p>"},{"location":"mini/user_guide/#sensor_interval","title":"Configure Sensor Publish Interval","text":"<p>The device uses deep sleep to preserve battery. It wakes up every few minutes to measure temperature and humidity and publish the data to MQTT topics. You can set the publishing interval with a slider on the Controls card. The range is from 5 to 60 minutes. The default is 30 minutes.</p> <p>Be aware, that this setting greatly impacts the battery life. The advertised battery life of 1-2 years is achievable with the interval set to 30 minutes (the default) or greater.</p>"},{"location":"mini/user_guide/#settings","title":"Settings Menu","text":"<p>Open the Settings Menu by holding any two buttons together for 5 seconds. The menu will show the following options:</p> <ul> <li> - Setup</li> <li> - Wi-Fi Setup</li> <li> - Restart</li> <li> - Close settings menu</li> </ul> <p>Restart triggers publishing MQTT discovery message and icon download. The first time after a restart, Wi-Fi connection will take a few seconds longer.</p> <p>Device Info</p> <p>You can see details of you device like software version, hardware revision and IP address in the Device Info menu. To access it, hold  for 2 seconds.</p> <p>Factory Reset</p> <p>To perform a factory reset, hold  for 10 seconds. Home Buttons will restart and all user settings will be reset to default. You will have to set up the device again.</p>"},{"location":"mini/user_guide/#info_screen","title":"Info Screen","text":"<p>Info screen displays current temperature, humidity and battery percentage.</p> <p></p> <p>Bring it up by pressing any button for 2 seconds. Home Buttons will automatically revert to showing button labels after 30 seconds. Or do that manually by pressing any button again.</p>"},{"location":"mini/user_guide/#setup","title":"Setup","text":"<p>Setup allows you to change connection settings and button labels. Home Buttons establishes a web interface accessible within the network it is already connected to.</p> <p>Begin setup by going to Settings Menu and pressing . Home Buttons will display instructions for connecting to a web interface. Scan the QR code or enter the local IP into a web browser.</p> <p></p>"},{"location":"mini/user_guide/#change-wi-fi-settings","title":"Change Wi-Fi settings","text":"<p>Click <code>Configure WiFi</code> to change Wi-Fi connection settings. Select a network, enter the password and click save. Wait a few seconds and then press any button to exit setup. Home Buttons will connect to the newly selected Wi-Fi network.</p>"},{"location":"mini/user_guide/#change-device-settings","title":"Change device settings","text":"<p>Click <code>Setup</code>. A page with the following parameters will open:</p> <ul> <li> <p><code>Device Name</code> - Name of your device as it will appear in Home Assistant.</p> </li> <li> <p><code>MQTT Server</code> - IP address of your MQTT broker. Usually the same as IP of your Home Assistant server.</p> </li> <li> <p><code>MQTT Port</code> - Port used by MQTT broker. The default is usually 1883.</p> </li> <li> <p><code>MQTT User</code> - MQTT user name (can be empty if not required by broker).</p> </li> <li> <p><code>MQTT Password</code> - MQTT password (can be empty if not required by broker).</p> </li> <li> <p><code>Base Topic</code> - MQTT topic that will be prepended to all topics used by Home Buttons. The default is <code>homebuttons</code>.</p> </li> <li> <p><code>Discovery Prefix</code> - Home Assistant parameter for MQTT discovery. The default is <code>homeassistant</code>. Leave that unchanged if you haven't modified Home Assistant's configuration.</p> </li> <li> <p><code>Static IP</code> - Optional. IP of Home Buttons. Must be outside the DHCP address range of your router.</p> </li> <li> <p><code>Gateway</code> - Optional. The IP address of your router.</p> </li> <li> <p><code>Subnet Mask</code> Optional. Usually <code>255.255.255.0.</code></p> </li> <li> <p><code>Primary DNS Server</code> - If left empty, <code>Gateway</code> IP will be used.</p> </li> <li> <p><code>Secondary DNS Server</code> - If left empty, <code>1.1.1.1</code> will be used.</p> </li> <li> <p><code>Button {1-4} Label</code> - Label that will be displayed next to each button.</p> </li> <li> <p><code>Icon Server</code> - Default is <code>https://icons.home-buttons.com/mdi/</code>. See Icon Server for more information.</p> </li> <li> <p><code>Temperature Unit</code> - Either <code>C</code> - Celsius  or <code>F</code> - Fahrenheit.</p> </li> </ul> <p>When done, click <code>Save</code>. Device will exit the setup and display button labels.</p> <p>If MQTT connection is not successful, <code>MQTT error</code> will be displayed and Home Buttons will return to welcome screen. You can start the setup again by pressing any button. Please make sure to enter correct MQTT parameters.</p>"},{"location":"mini/user_guide/#wifi_setup","title":"Wi-Fi Setup","text":"<p>If Home Buttons becomes inaccessible on the local network due to changed Wi-Fi settings, you can restart the Wi-Fi setup at any time.</p> <p>Open Settings Menu by holding any two buttons together for 5 s and press . Wi-Fi hotspot will be established and connection instructions will be displayed.</p> <ol> <li> <p>Home Buttons will establish a Wi-Fi hotspot. Connect to it by scanning the QR code on the display or manually connecting to Wi-Fi network and entering the password.</p> <p></p> <p>The Wi-Fi password is <code>password123</code>.</p> </li> <li> <p>After connecting to Home Buttons Wi-Fi with your device, a captive portal will pop up automatically. If it doesn't, open the web browser and navigate to any web page. You will be redirected to the captive portal.</p> <p></p> </li> <li> <p>Click <code>Configure WiFi</code> and wait a few seconds for a list of networks to appear.</p> </li> <li> <p>Select your network, enter the password and click <code>Save</code>.</p> </li> </ol> <p>Home Buttons will disable the hotspot and connect to your Wi-Fi network in a few seconds. <code>Wi-Fi CONNECTED</code> will appear on display.</p> <p>If connection is not successful, <code>Wi-Fi error</code> will be displayed and Home Buttons will return to welcome screen. You can start Wi-Fi setup again by pressing any button. Please make sure to enter the password correctly.</p>"},{"location":"mini/user_guide/#custom_message","title":"Display a Custom Message","text":"<p>A custom message can be shown on the e-paper display by inputting it in the <code>Show Message</code> field on the device page in Home Assistant.</p> <p>You can also use the <code>Show Message</code> entity in automations:</p> <pre><code>action:\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: text\n    entity_id: text.home_buttons_265cbf_show_message\n    type: set_value\n    value: \"Test \\n Message\"\n</code></pre> <p>Message will not be wrapped automatically. You must include line breaks <code>\\n</code> manually.</p> <p>Alternatively, you can display a message by publishing a retained payload to the <code>{base_topic}/{device_name}/cmd/disp_msg</code> topic. The message will be displayed when the device wakes up on button press or sensor publish. You can clear the message by pressing any button.</p> <p>Example Home Assistant publish service call YAML:</p> <pre><code>service: mqtt.publish\ndata:\n  topic: homebuttons/HB Mini 123/cmd/disp_msg\n  payload: \"Line 1\\nLine 2\"\n  retain: true\n</code></pre> <p><code>mosquitto_pub</code> example:</p> <pre><code>mosquitto_pub -h &lt;broker_host&gt; -t &lt;topic&gt; -m $'Line 1\\nLine 2'\n</code></pre>"},{"location":"mini/user_guide/#schedule-wakeup","title":"Schedule Wakeup","text":"<p>You can schedule the next wakeup using the <code>Schedule Wakeup</code> entity. This is useful if you are changing labels dynamically based on state of other devices.</p> <p>For example: If some action you trigger with a button press is not instant, but takes some time to complete, you can schedule the next wakeup after the action is completed. This way the label will be updated sooner, instead of having to wait for the next sensor publish wakeup.</p> <p>Example Home Assistant automation YAML:</p> <pre><code>alias: schedule test\ndescription: \"\"\nmode: single\n\n# Change button label immediately on press\ntrigger:\n  - platform: device\n    domain: mqtt\n    device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    type: button_short_press\n    subtype: button_3\n    discovery_id: HBTNS-2301-001-265CBF button_3\ncondition: []\naction:\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: text\n    entity_id: text.home_buttons_265cbf_button_3_label\n    type: set_value\n    value: _OPENING...\n\n# Schedule next wakeup after 15 seconds\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: number\n    entity_id: number.home_buttons_265cbf_schedule_wakeup\n    type: set_value\n    value: 15\n\n# Simulate some action that takes 10 seconds\n  - delay:\n      hours: 0\n      minutes: 0\n      seconds: 10\n      milliseconds: 0\n\n# Change button label after action is completed\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: text\n    entity_id: text.home_buttons_265cbf_button_3_label\n    type: set_value\n    value: _OPENED\n</code></pre> <p>You can also schedule wakeup by publishing a message to the <code>{base_topic}/{device_name}/cmd/schedule_wakeup</code> topic. The message payload should be the number of seconds to wait before the next wakeup. The minimum value is 5 seconds.</p>"},{"location":"mini/user_guide/#set-labels-dynamically","title":"Set labels dynamically","text":"<p>You can set button labels dynamically from Home Assistant automations or by publishing a MQTT message.</p>"},{"location":"mini/user_guide/#home-assistant_1","title":"Home Assistant","text":"<p>Use a <code>text.set_value</code> service call to set the label of a button. The entity ID is <code>text.{device_name}_button_{button_number}_label</code>.</p> <pre><code>service: text.set_value\ndata:\n  value: \"mdi:dog\"\ntarget:\n  entity_id: text.my_buttons_button_1_label\n</code></pre> <p>You can use templates to set the label based on the state of other entities:</p> <pre><code>service: text.set_value\ndata:\n  value: &gt;\n    {% set current_time = states(\"sensor.time\") %}\n    {% if current_time &lt; \"12:00\" %}\n      mdi:dog\n    {% else %}\n      mdi:cat\n    {% endif %}\ntarget:\n  entity_id: text.my_buttons_button_1_label\n</code></pre> <p>You must use this service call. Device actions do not support templates.</p>"},{"location":"mini/user_guide/#mqtt","title":"MQTT","text":"<p>Publish a message to the <code>{base_topic}/{device_name}/cmd/button_{button_number}_label</code> topic. The message payload should be the label you want to set. The label will be updated on the next wakeup.</p>"},{"location":"mini/user_guide/#icon_server","title":"Icon Server","text":"<p>Home Buttons downloads icons from an Icon Server. The default is <code>https://icons.home-buttons.com/mdi/</code>, hosted by us.</p> <p>The icons are in the BMP format, converted from the official Material Design Icons SVG files. The server is used only when the icon is first downloaded. After that, the icon is stored in the device's flash memory and can be used offline.</p> <p>Repository with converted BMP files and converstion script is here.</p>"},{"location":"mini/user_guide/#self_hosted_icon_server","title":"Self Hosted Icon Server","text":"<p>You can aslo host your own icon server. Home Buttons expects the following URL structure:</p> <pre><code>http://{ICON_SERVER}/{icon_size}/{icon_name}.bmp\n</code></pre> <ul> <li><code>{ICON_SERVER}</code> - IP address or domain name of your icon server</li> <li><code>{icon_name}</code> - Name of the icon, as in the Material Design Icons repository.</li> <li><code>{icon_size}</code> - Size of the icon. One of the following: <code>100x100</code>, <code>64x64</code> and <code>48x48</code>.</li> </ul> <p>All three sizes must be available.</p> <p>Example URL: <code>http://192.168.1.123/100x100/home.bmp</code></p> <p>When using a self hosted icon server, the device is not using HTTPS. It's recommended to only use it on a local network.</p> <p>Hosting with Home Assistant</p> <p>For a simple fully local setup, Home Assistant may be used as an icon server. Create a new folder <code>mdi</code> in the <code>www</code> directory and copy the BMP files there. Then set the <code>Icon Server</code>to <code>http://{home_assistant_ip}:8123/local/mdi/</code>. The icons must be in the following structure: <code>/mdi/{icon_size}/{icon_name}.bmp</code>. For example: <code>/mdi/100x100/home.bmp</code>.</p>"},{"location":"mini/user_guide/#opening_case","title":"Opening The Case","text":"<p>If you need to remove or replace the battery, or perform a manual firmware upgrade, you have to open the case. The back cover can stay mounted to the wall during the procedure.</p> <ol> <li> <p>Open the back cover by pressing the tab on the bottom of the device.</p> </li> <li> <p>Replace the back cover by aligning it first at the top and then pressing it down until it clicks.</p> </li> </ol> <p></p>"},{"location":"original/","title":"Home Buttons","text":"<p>Features:</p> <ul> <li>6 push buttons, multiple press support</li> <li>2.9\" e-paper display</li> <li>Text labels and Material Design Icons </li> <li>Wi-Fi connectivity</li> <li>Less than 1 second from button press to triggered action (depending on your network)</li> <li>Temperature &amp; humidity sensor</li> <li>Power options: 18650 Li-Ion Battery Cell, USB-C, 5V DC</li> <li>Greater than 1 year battery life</li> <li>USB-C charging</li> <li>Compact size: 87 x 87 x 23 mm</li> </ul>"},{"location":"original/#getting-started","title":"Getting Started","text":"<p>Set up you device with the help of Getting Started guide.</p>"},{"location":"original/#where-to-get","title":"Where To Get","text":"<p>You can buy Home Buttons on Tindie or Lectronz.</p> <p></p> <p></p>"},{"location":"original/#technical-specifications","title":"Technical Specifications","text":""},{"location":"original/#physical","title":"Physical","text":"<ul> <li>Width: 86.5 mm</li> <li>Height: 86.5 mm</li> <li>Depth: 22.8 mm</li> <li>Weight: 140 g (incl. battery)</li> <li>Casing material: PETG (3D printed)</li> </ul>"},{"location":"original/#user-interface","title":"User Interface","text":"<ul> <li>E-paper display</li> <li>6 tactile buttons with LED illumination</li> </ul>"},{"location":"original/#display","title":"Display","text":"<ul> <li>Type: Single color E-paper (non-illuminated)</li> <li>Size: 2.9\"</li> <li>Resolution: 296 x 128</li> <li>Model number: Good Display GDEY029T94</li> </ul>"},{"location":"original/#connectivity","title":"Connectivity","text":"<ul> <li>2.4Ghz WiFi<ul> <li>MQTT protocol (Supports MQTT Discovery)</li> </ul> </li> <li>USB Type-C connector<ul> <li>Charging</li> <li>Firmware update (USB DFU mode)</li> <li>Debug messages (USB CDC mode)</li> </ul> </li> </ul>"},{"location":"original/#soc","title":"SoC","text":"<ul> <li>ESP32-S2<ul> <li>Xtensa\u00ae Single\u00adCore 32\u00adbit LX7</li> <li>Integrated WiFi modem: IEEE 802.11 b/g/n (2.4 GHz Wi\u00adFi)</li> </ul> </li> <li>Supports OTA (Over-The-Air firmware update)</li> <li>Native USB for firmware update and debug</li> <li>Advanced security features</li> </ul>"},{"location":"original/#environmental-sensor","title":"Environmental Sensor","text":"<ul> <li>Sensirion SHTC3 high accuracy Temperature and Relative Humidity sensor</li> <li>Temperature accuracy: \u00b10.2\u00b0C (0\u00b0C to 60\u00b0C)</li> <li>Humidity accuracy: \u00b12% RH (20% RH to 80% RH)</li> </ul>"},{"location":"original/#battery","title":"Battery","text":"<ul> <li>3.7 V Lithium-Ion 18650 battery cell (non-protected) is required</li> <li>WARNING: maximum cell length is 65.5 mm. Button top cells might not fit properly</li> <li>Expected battery life: 18 months<ul> <li>Assuming Panasonic NCR18650B 3400mAh or equivalent</li> </ul> </li> <li>Battery safety features:<ul> <li>Reverse polarity protection</li> <li>Over-discharge protection</li> <li>Over-charge protection</li> <li>Overload protection</li> </ul> </li> </ul> <p>Charging at extreme temperatures (below 0\u00b0C or above 50\u00b0C) is not recommended. Check your battery specifications for more information</p>"},{"location":"original/#charging","title":"Charging","text":"<ul> <li>Any standard USB Type-C power supply is sufficient for charging <p>Can also be charged using any computer USB port</p> </li> <li>Battery charging current: 780 mA <p>Make sure the selected battery can be safely charged at this rate</p> </li> <li>Expected recharging time from empty: 4 hours <p>Assuming Panasonic NCR18650B 3400  mAh or equivalent</p> </li> </ul>"},{"location":"original/hardware_hacks/","title":"DIY Hardware Hacks","text":"<p>WARNING: Dangerous!</p> <p>We recomend that you use Home Buttons as is. Do not do any of the modifications, unless you have experience soldering and working with electronics and know exactly what you are doing. Modifying battery powered devices is dangerous and can result in equipment damage, injury and fire.</p>"},{"location":"original/hardware_hacks/#usb-power-without-battery","title":"USB power without battery","text":"<p>Home Buttons hardware revision 2.1 (visible on the PCB under the Home Buttons text) is designed to only be powered by a battery cell. Later revisions also support USB-C or 5V DC input. To enable USB-C power on this revision, you can perform this modification.</p> <p>After doing this modification, battery use will no longer be possible!</p> <ul> <li>Unmount Home Buttons from the wall and remove the battery.</li> <li>Remove the PCB from the case by flexing the top wall of the case outwards and lightly pressing on the top part of the display, so that the PCB pops out at the top.</li> <li>Place the PCB display side down and take a look at the bottom right corner. This is the area we are going to modify.</li> <li>First, cut the trace connecting a solder jumper marked below. Confirm with a multimeter that there is no connection between the two jumper pads. This disconnects the battery holder from the circuit, so even if the battery is accidentally inserted, nothing bad happens. If desired, you can also de-solder the battery holder completely instead of cutting the jumper.</li> <li>Next, solder a short piece of wire between the inner contact of the two capacitors, as marked below. Use a wire that is very thin and flexible.</li> <li>Connect your USB power supply and test if device works correctly.</li> <li>Place the PCB back into the case by first inserting the bottom part at an angle and then pushing the top part in until it snaps in place.</li> <li>The device are now ready to be used without battery.</li> </ul> <p></p> <p>If you wish to revert this hack, remove the added wire and bridge the jumper with a solder blob.</p>"},{"location":"original/mqtt_topics/","title":"MQTT Topics","text":"<p>Home Buttons uses MQTT to communicate with you smart home.</p> <p>Here is a list of topics that are used by the device:</p> Topic Description Retained {BASE_TOPIC}/{DEVICE_NAME}/button_{1-6} When button {1-6} is pressed, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-6}_double When button {1-6} is pressed 2 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-6}_triple When button {1-6} is pressed 3 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/button_{1-6}_quad When button {1-6} is pressed 4 times, \"PRESS is published to this topic. No {BASE_TOPIC}/{DEVICE_NAME}/temperature Temperature in \u00b0C or \u00b0F, depending on the setup choice. Published on button press and every N minutes, specified by Sensor Interval. No {BASE_TOPIC}/{DEVICE_NAME}/humidity Relative humidity in %. Published on button press and  every  N minutes, specified by Sensor Interval. No {BASE_TOPIC}/{DEVICE_NAME}/battery Battery charge in %. Published on button press and  every  N minutes, specified by Sensor Interval. No {BASE_TOPIC}/{DEVICE_NAME}/btn_{1-6}_label Current label of button {1-6}. Yes {BASE_TOPIC}/{DEVICE_NAME}/sensor_interval Current sensor publish interval in minutes. Yes {BASE_TOPIC}/{DEVICE_NAME}/awake_mode Current state of Awake mode Yes {BASE_TOPIC}/{DEVICE_NAME}/awake_mode/availability Indicates when Awake mode is available (available only when DC power source is connected). \"online\" or \"offline\" Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/btn_{1-6}_label Command to change label of button {1-6} to new value. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/sensor_interval Command to change sensor publish interval. 1 - 30 minutes. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/awake_mode Command to change Awake mode setting. \"ON\" or \"OFF. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/disp_msg Display a custom message on device. Topic cleared by device when received. Yes {BASE_TOPIC}/{DEVICE_NAME}/cmd/schedule_wakeup Schedule next wakeup. Value in seconds. Topic cleared by device when received. Yes <ul> <li>{BASE_TOPIC} - Configured during setup. Default is homebuttons.</li> <li>{DEVICE_NAME} - Name of device as configured during setup and shown in Home Assistant</li> </ul>"},{"location":"original/setup/","title":"Getting Started","text":"<p>Setup up your Home Buttons in a few simple steps!</p> <p>You will need:</p> <ol> <li>Depending on the desired power source (one out of):</li> <li>18650 Li-Ion battery cell (not included). WARNING: maximum length is 65.5 mm. Button top cells might not fit properly.</li> <li>USB-C power brick</li> <li>5V DC power supply</li> <li>2x mounting screws with anchors suitable for your walls or double sided tape (must stick to plastic well)</li> <li>A Wi-Fi network</li> <li>An MQTT broker</li> <li>Home Assistant (optional - can work only through MQTT)</li> </ol>"},{"location":"original/setup/#solder-battery-holder-or-dc-terminal","title":"Solder battery holder or DC terminal","text":"<p>If you purchased a version of Home Buttons that requires soldering, see here for instructions.</p> <p>You can skip this step if you purchased a fully soldered device.</p>"},{"location":"original/setup/#insert-battery-cell","title":"Insert Battery Cell","text":"<p>Skip this step if you will power the device by USB-C or 5V DC input.</p> <p>You need one 18650 Li-Ion battery cell (not included). Please use a high quality cell with greater than 3000 mAh capacity. The length of the cell must not exceed 65.5 mm. Button top cells might not fit properly. </p> <p>If you have a device with a different case design see here for how to open it.</p> <ol> <li> <p>Open the back cover by pressing the tab on the bottom of the device.</p> <p></p> </li> <li> <p>Insert the battery cell. Be careful to orient it so that polarity matches markings on the PCB.</p> <p></p> </li> <li> <p>Replace the back cover by aligning it first at the top and then pressing it down until it clicks.</p> <p></p> </li> </ol>"},{"location":"original/setup/#setup_wifi","title":"Set Up Wi-Fi Connection","text":"<p>After inserting the battery, press any button to wake the device and start Wi-Fi setup procedure.</p> <p>If the device doesn't wake when pressing a button, briefly connect it to an USB-C charger</p> <p>If you don't complete the setup in 10 minutes, Home Buttons will turn off again to save battery. Press any button to wake the device and start again.</p> <ol> <li> <p>Home Buttons establishes a Wi-Fi hotspot for configuration. Connect to it by scanning the QR code on the display or manually connecting to Wi-Fi network and entering the password.</p> <p></p> </li> <li> <p>After connecting to Home Buttons Wi-Fi with your device, a captive portal will pop up automatically. If it doesn't, open the web browser and navigate to http://192.168.4.1.</p> <p></p> </li> <li> <p>Click on <code>Configure WiFi</code> and wait a few seconds for a list of networks to appear.</p> </li> <li> <p>Select your network, enter the password and click <code>Save</code>.</p> </li> </ol> <p>Home Buttons will disable the hotspot and connect to your Wi-Fi network in a few seconds. <code>Wi-Fi connected</code> will appear on display.</p> <p>If connection is not successful, <code>Wi-Fi connection error</code> will be displayed and Home Buttons will return to welcome screen. You can start Wi-Fi setup again by pressing any button. Please make sure to enter the password correctly.</p>"},{"location":"original/setup/#set-up-mqtt-broker","title":"Set Up MQTT Broker","text":"<p>Home Buttons requires an MQTT broker. If you don't already use it, you should install one now. See this page for more information. Usually, the simplest way is to install Mosquitto MQTT as a Home Assistant add-on.</p> <p>If you're using Mosquitto MQTT add-on, you must use username and password of your Home Assistant account. It's recommended to create a new account for use with MQTT.</p> <p>If you don't use Home Assistant, see Minimal Setup guide.</p>"},{"location":"original/setup/#setup_mqtt","title":"Set Up MQTT connection","text":"<p>When connected to the Wi-Fi, Home Buttons can be configured using any device on your local network.</p> <ol> <li> <p>Scan the QR code or enter the local IP into a web browser. The setup page will load:</p> <p></p> </li> <li> <p>Click <code>Setup</code></p> </li> <li> <p>Enter the connection parameters:</p> <ul> <li> <p><code>Device Name</code> - Name of your device as it will appear in Home Assistant.</p> </li> <li> <p><code>MQTT Server</code> - IP address of your MQTT broker. Usually the same as IP of your Home Assistant server.</p> </li> <li> <p><code>MQTT Port</code> - Port used by MQTT broker. The default is usually 1883.</p> </li> <li> <p><code>MQTT User</code> - MQTT user name (can be empty if not required by broker).</p> </li> <li> <p><code>MQTT Password</code> - MQTT password (can be empty if not required by broker).</p> </li> <li> <p><code>Base Topic</code> - MQTT topic that will be prepended to all topics used by Home Buttons. The default is <code>homebuttons</code>.</p> </li> <li> <p><code>Discovery Prefix</code> - Home Assistant parameter for MQTT discovery. The default is <code>homeassistant</code>. Leave that unchanged if you haven't modified Home Assistant's configuration.</p> </li> <li> <p><code>Temperature Unit</code> - Either <code>C</code> - Celsius  or <code>F</code> - Fahrenheit.</p> </li> </ul> </li> <li> <p>Enter static IP details (optional):</p> <ul> <li> <p><code>Static IP</code> - IP of Home Buttons. Must be outside the DHCP address range of your router.</p> </li> <li> <p><code>Gateway</code> - The IP address of your router.</p> </li> <li> <p><code>Subnet Mask</code> - Usually <code>255.255.255.0.</code></p> </li> <li> <p><code>Primary DNS Server</code> - If left empty, <code>Gateway</code> IP will be used.</p> </li> <li> <p><code>Secondary DNS Server</code> - If left empty, <code>1.1.1.1</code> will be used.</p> </li> </ul> <p>This parameters are optional, but highly recommended, to reduce response time and increase battery life. Especially if you use a WPA-3 network.</p> <p>Please double check that the IP address you enter is not already in use by another device on your network.</p> </li> <li> <p>Enter button labels</p> <p>This step is not necessary, you can do it later directly in Home Assistant.</p> <ul> <li><code>Button {1-6} Label</code> - Label that will be displayed next to each button. The order is from top to bottom.</li> </ul> </li> <li> <p>Confirm by clicking <code>Save</code>. Device will exit the setup and display button labels.</p> </li> </ol> <p>If MQTT connection is not successful, <code>MQTT error</code> will be displayed and Home Buttons will return to welcome screen. You can start the setup again by pressing any button. Please make sure to enter correct MQTT parameters.</p>"},{"location":"original/setup/#set-up-home-assistant","title":"Set Up Home Assistant","text":"<p>Home Buttons uses MQTT Discovery and will appear in Home Assistant automatically.</p> <p>To get to the device's page in Home Assistant, click settings in the left side bar, then open Devices &amp; Services, move to the Devices tab and click on the name you gave your Home Buttons in the previous step.</p> <p></p> <p>Here you can see device info, sensor readings and battery level. You can also configure button labels,  button actions and sensor publish interval.</p>"},{"location":"original/setup/#configure-button-labels","title":"Configure Button Labels","text":"<p>In the Controls card, enter the button labels that you want to be shown on the e-paper display. The buttons are ordered from top to bottom. Labels will be updated next time you press a button or on the next sensor update interval.</p> <p>Labels can be:</p> <ol> <li><code>Text</code></li> <li>Icon </li> <li>Mixed - <code>Text</code> and Icon </li> </ol>"},{"location":"original/setup/#text","title":"Text","text":"<p>Enter any text you want. Labels support UTF-8 with special characters. Home Buttons will choose between two font sizes automatically. It can display around 5 letters in large font and around 7 letters in smaller font.</p>"},{"location":"original/setup/#icons","title":"Icons","text":"<p>You can choose any of the Material Design Icons. Enter the icon name in the label field in the format <code>mdi:{icon name}</code>. For example, <code>mdi:lightbulb-auto-outline</code>.</p> <p>Icons are downloaded from a Github repository. For that purpose an internet connection is required. Once downloaded, the icons are stored permanently on the device. If you do not wish to have Home Buttons connected to the internet, you can set up the icons once and then disable internet access.</p>"},{"location":"original/setup/#mixed","title":"Mixed","text":"<p>In label field, enter: <code>mdi:{icon name} {text}</code>. For example, <code>mdi:lightbulb Bedroom</code>. There must be a single space separating the icon name and the text. Label name must always be first. The actual position of the icon will be before or after the text, based on the location of the button.</p> <p>Icons are slightly smaller in this mode.</p>"},{"location":"original/setup/#configure-button-actions","title":"Configure Button Actions","text":"<p>To configure button actions, click \"+\" on the Automations card, select one of the buttons and set up an automation with Home Assistant's editor.</p> <p></p> <p>The expected delay from a button being pressed to the automation being triggered is around 1 second (depending on your network).</p>"},{"location":"original/setup/#mount-to-the-wall","title":"Mount To The Wall","text":"<p>Mount the back cover of Home Buttons to the wall. There are 2 options:</p> <ol> <li> <p>Screws</p> <p>Use two screws (max diameter 4.5 mm) with anchors suitable for your walls (not included).</p> </li> <li> <p>Tape</p> <p>Use double sided tape (not included). Use only high quality heavy duty foam mounting tape. A small patch of size around 1 x 1 cm in each corner works best.</p> </li> </ol> <p>Make sure the arrow is pointing upwards!</p>"},{"location":"original/setup/#other-important-information","title":"Other Important Information","text":""},{"location":"original/setup/#charging","title":"Charging","text":"<p>The expected battery life is &gt; 1.5 years with a high quality 18650 cell. When the battery is getting low, Home Buttons will remind you to charge after pressing a button. If the battery gets critically low, the device will turn off. The display will show: <code>TURNED OFF PLEASE RECHARGE BATTERY</code>. You can see the remaining battery percentage as a sensor in Home Assistant.</p> <p>Plug in any USB-C charger to charge the battery. The expected full charge time is 4 hours.</p> <p>When the device is charging, there is a solid line displayed at the bottom of the screen. When charging is done, the line disappears.</p> <p>For hardware revision &lt;= 2.1 there is no charging indicator. When the battery is fully charged, the display will show <code>FULLY CHARGED</code>.</p>"},{"location":"original/setup/#temperature-humidity","title":"Temperature &amp; Humidity","text":"<p>Home Buttons includes a high precision temperature and humidity sensor. The readings are taken every few minutes (configurable) and on every button press. The values are displayed as sensors in Home Assistant. </p> <p>You can bring up a display of current temperature, humidity &amp; battery level by pressing any button for 2 seconds. The device will automatically revert to showing button labels in 30 seconds. Or do that manually by pressing any button again.</p>"},{"location":"original/setup/#whats-next","title":"What's next?","text":"<p>See User Guide for further information.</p>"},{"location":"original/soldering/","title":"Soldering","text":"<p>Se instructions below for your chosen power supply option. You can only use one option at a time.</p>"},{"location":"original/soldering/#battery-cell-holder","title":"Battery Cell Holder","text":"<ol> <li> <p>Align the cell holder so that the pin in the corner matches the hole in the PCB.</p> <p></p> </li> <li> <p>Solder the contacts on each side</p> <p></p> <ul> <li>Use a powerful soldering iron with a large tip (width of 3-4 mm works best)</li> <li>Approach with the tip from a side that is free of any neighboring components to avoid damaging them</li> <li>Avoid soldering for too long. Excessive heat could damage the e-paper display on the other side of the PCB! If you're having trouble making the joint quickly, your soldering iron is probably not powerful enough or you tip is too small.</li> <li>Use enough tin to completely fill the holes in the battery holder contacts. The tin should also flow nicely all around the contact.</li> </ul> </li> </ol>"},{"location":"original/soldering/#dc-wire-terminal","title":"DC Wire Terminal","text":"<ol> <li> <p>Solder a layer of tin onto the pads of PCB. This makes the next steps easier.</p> </li> <li> <p>Place the terminal connector so that the openings for the wires are pointing towards the middle of the PCB. The connector should be centered so that there is equal amount of the pads left clear on each side.</p> <p></p> </li> <li> <p>Solder first on the side opposite to the wire openings, where the contacts are more accessible.</p> </li> <li> <p>Solder on the other side. The contacts here are a bit hard to reach. Place the tip on the pad in front of the contacts and let it heat up.  Add some tin from the side. It should flow towards the contact and make a joint.</p> </li> <li> <p>Visually check the solder joints for any problems</p> </li> </ol> <p>Avoid soldering for too long. Excessive heat could damage the e-paper display on the other side of the PCB!</p>"},{"location":"original/update/","title":"Firmware Update","text":"<p>You can see the current firmware version in Home Assistant.  Find your Home Buttons in the device list and click it. Firmware version is displayed in the Device info card.</p> <p></p> <p>Firmware can be updated in a couple ways:</p> <ul> <li>Over The Air (OTA) using a web interface - recommended</li> <li>Online Flash Tool using a web browser and USB</li> <li>Esptool.py via USB</li> <li>Full Image Flash - repair a device that is not booting. Can be done via Esptool.py or Online Flash Tool.</li> </ul> <p>OTA is the simplest way and therefore recommended.</p> <p>Important!</p> <ul> <li>Updating to v2.4.0 is only possible via Full Image Flash.</li> <li>Downgrading from v2.4.0 is not supported</li> </ul>"},{"location":"original/update/#OTA","title":"Over The Air (OTA)","text":"<ol> <li> <p>Find the latest firmware here. Check release notes for any special update requirements. Make sure to select the correct file ending with <code>_original.bin</code>. Download it to your computer.</p> </li> <li> <p>Enter Setup from the Settings Menu. Home Buttons will display instructions for connecting to a web interface. Scan the QR code or enter the local IP into a web browser.</p> <p></p> </li> <li> <p>Click <code>Info</code> and scroll to the bottom of the Info screen. Click <code>Update</code>. The update menu will load:</p> <p></p> </li> <li> <p>Click <code>Choose file</code> and select the previously downloaded .bin file on your computer.</p> </li> <li> <p>Click <code>Update</code> Wait a few seconds while the firmware is downloaded to the device. When done, <code>Update Successful</code> message will appear in your web browser and Home Buttons will reboot.</p> <p></p> </li> </ol>"},{"location":"original/update/#online","title":"Online Flash Tool","text":"<p>Flash your device from your web browser.</p> <ol> <li> <p>Connect Home Buttons to your computer using an USB-C cable.</p> </li> <li> <p>Go to nplan.github.io/HomeButtonsFlasher and follow the instructions.</p> </li> </ol> <p>Google Chrome and Microsoft Edge are supported</p>"},{"location":"original/update/#esptool","title":"Esptool.py","text":"<ol> <li> <p>Install esptool. If you already have Python installed, the easiest way is to install it using pip: </p> <pre><code>pip install esptool\n</code></pre> <p>See here for more installation details.</p> </li> <li> <p>Find the latest firmware here. Check release notes for any special update requirements. Make sure to select the correct file:</p> <ol> <li> <p>Update image - regular update</p> <p>Select file ending with <code>_original.bin</code>.</p> </li> <li> <p>Full image - to flash the entire device memory. This will erase all user data.</p> <p>Select file ending with <code>_original_full_image.bin</code>. </p> </li> </ol> <p>Download the file to your computer.</p> </li> <li> <p>Open the case. See instructions here.</p> </li> <li> <p>Place device into programming mode. Press and hold the <code>BOOT</code> button and then press the <code>RST</code> button. <code>BOOT LED</code> will light up. Release both buttons.</p> <p></p> </li> <li> <p>Connect Home Buttons to your computer using an USB-C cable.</p> </li> <li> <p>Determine port on you computer.</p> <p>Windows</p> <p>Open Device Manager and check Ports section.  If you're not sure which device is Home Buttons, disconnect it and then reconnect it.  See which port disappears and then appears again. Remember the COM## name.</p> <p>macOS and Linux</p> <p>Run the following command twice. First with Home Buttons connected and then disconnected. The port that is present the first time and not the second is the correct one.</p> <p>macOS</p> <pre><code>ls /dev/cu*\n</code></pre> <p>Linux</p> <pre><code>ls /dev/tty*\n</code></pre> <p>Copy the path of the correct port.</p> </li> <li> <p>Flash the firmware using esptool.</p> <p>Run this commands in Terminal or Command Prompt:</p> <ol> <li> <p>Update image - regular update</p> <p><pre><code>python -m esptool --port PORT --after no_reset erase_region 0xe000 0x2000\n</code></pre> <pre><code>python -m esptool --port PORT --after no_reset write_flash 0x10000 BIN_FILE_PATH\n</code></pre></p> <p>Substitute <code>PORT</code> with port that you determined in previous step. Substitute <code>BIN_FILE_PATH</code> with the path of downloaded firmware .bin file.</p> <p>The <code>erase_region</code> command resets the app partition boot switch. It's required to make sure the device will boot to the newly flashed firmware.</p> </li> <li> <p>Full image - to flash the entire device memory. This will erase all user data.</p> <pre><code>python -m esptool --port PORT --after no_reset write_flash 0x0 BIN_FILE_PATH\n</code></pre> <p>Substitute <code>PORT</code> with port that you determined in previous step. Substitute <code>BIN_FILE_PATH</code> with the path of downloaded firmware .bin file.</p> </li> </ol> </li> <li> <p>Wait a few seconds for firmware to flash. When done, you will see a confirmation in Terminal or Command Prompt window.</p> </li> <li> <p>Disconnect USB-C cable and press the <code>RST</code> button.</p> </li> </ol>"},{"location":"original/update/#full_image","title":"Full Image Flash","text":"<p>This method flashes the entire device memory. It can be used to repair a device that is not booting.</p> <p>Important! User data will be lost. This includes button labels, WiFi credentials, MQTT settings, etc.</p> <p>You can flash your device via:</p> <ul> <li>Online Flash Tool - follow the instructions above. Select <code>Full Image</code> in the online tool prior to flashing.</li> <li>Esptool.py - follow the instructions above. Download the correct image when required.</li> </ul>"},{"location":"original/user_guide/","title":"User guide","text":""},{"location":"original/user_guide/#controlling-the-device","title":"Controlling The Device","text":"<ul> <li>Info Screen - hold any button for 2 s</li> <li>Settings Menu - hold any two buttons together for 5 s</li> </ul> <p>Firmware v2.2.1 and below:</p> <ul> <li>Info Screen - hold any button for 2 s</li> <li>Settings Menu - hold any button for 5 s</li> </ul>"},{"location":"original/user_guide/#home-assistant","title":"Home Assistant","text":"<p>You can configure most of the settings directly in Home Assistant.</p> <p>To get to the device's page in Home Assistant, click settings in the left side bar, then open Devices &amp; Services, move to the Devices tab and click on the name you gave your Home Buttons during setup.</p> <p></p>"},{"location":"original/user_guide/#configure-button-labels","title":"Configure Button Labels","text":"<p>In the Controls card, enter the button labels that you want to be shown on the e-paper display. The buttons are ordered from top to bottom. Labels will be updated next time you press a button or on the next sensor update interval. Labels can be:</p> <ol> <li><code>Text</code></li> <li>Icon </li> <li>Mixed - <code>Text</code> and Icon </li> </ol>"},{"location":"original/user_guide/#text","title":"Text","text":"<p>Enter any text you want. Labels support UTF-8 with special characters. Home Buttons will choose between two font sizes automatically. It can display around 5 letters in large font and around 7 letters in smaller font.</p> <p>To force small font, prepend text with an underscore: <code>_</code>. Example: <code>_Bedroom</code>.</p>"},{"location":"original/user_guide/#icons","title":"Icons","text":"<p>You can choose any of the Material Design Icons. Enter the icon name in the label field in the format <code>mdi:{icon name}</code>. For example, <code>mdi:lightbulb-auto-outline</code>.</p> <p>Icons are downloaded from the Icon Server. For that purpose an internet connection is required. Once downloaded, the icons are stored permanently on the device. If you do not wish to have Home Buttons connected to the internet, you can set up the icons once and then disable internet access. Alternatively, you can host your own icon server. See Self Hosted Icon Server for more information.</p>"},{"location":"original/user_guide/#mixed","title":"Mixed","text":"<p>In label field, enter: <code>mdi:{icon name} {text}</code>. For example, <code>mdi:lightbulb Bedroom</code>. There must be a single space separating the icon name and the text. Label name must always be first. The actual position of the icon will be before or after the text, based on the location of the button.</p> <p>Icons are slightly smaller in this mode.</p> <p>To force small font, prepend text with an underscore: <code>_</code>. Example: <code>mdi:lightbulb _Bedroom</code>.</p>"},{"location":"original/user_guide/#configure-button-actions","title":"Configure Button Actions","text":"<p>To configure button actions, click \"+\" on the Automations card, select one of the buttons and set up an automation with Home Assistant's editor.</p> <p></p> <p>The expected delay from a button being pressed to the automation being triggered is around 1 second (depending on your network).</p>"},{"location":"original/user_guide/#sensor_interval","title":"Configure Sensor Publish Interval","text":"<p>The device uses deep sleep to preserve battery. It wakes up every few minutes to measure temperature and humidity and publish the data to MQTT topics. You can set the publishing interval with a slider on the Controls card. The range is from 1 to 30 minutes. The default is 10 minutes.</p> <p>Be aware, that this setting greatly impacts the battery life. The advertised battery life of &gt; 1.5 year is achievable with the interval set to 10 minutes (the default) or greater.</p> <p><code>Sensor Interval</code> parameter will only be used in Sleep Mode. In Awake Mode the sensor publish interval is 60 seconds.</p>"},{"location":"original/user_guide/#awake-mode","title":"Awake Mode","text":"<p>Home Buttons supports two modes of operation:</p> <ol> <li> <p>Sleep Mode </p> <p>The default. Home Buttons will spend most of the time in deep sleep. It will wake up and connect to network only when a button is pressed or every few minutes as specified by the <code>Sensor Interval</code> option. When changing button labels, the display will only be updated at the next wake up.</p> </li> <li> <p>Awake Mode</p> <p>Available only when USB-C is connected or if device is powered by the 5 V DC input. In this mode the device is always on and connected to network. Changing button labels will update the display instantly. The sensor publish interval is fixed at 60 seconds. The disadvantage of this mode is that the temperature sensor reading will be a few degrees too high, since the Wi-Fi modem is generating heat.</p> </li> </ol> <p>Awake Mode is only available on Home Buttons hardware revision &gt;= 2.2 by default. If you wish to enable it on earlier revisions, you must perform a hardware hack.</p>"},{"location":"original/user_guide/#settings","title":"Settings Menu","text":"<p>Open the Settings Menu by holding any two buttons together for 5 seconds. The menu will show the following options:</p> <ul> <li> - Setup</li> <li> - Wi-Fi Setup</li> <li> - Restart</li> <li> - Close settings menu</li> </ul> <p>Restart triggers publishing MQTT discovery message and icon download. The first time after a restart, Wi-Fi connection will take a few seconds longer.</p> <p>Device Info</p> <p>You can see details of you device like software version, hardware revision and IP address in the Device Info menu. To access it, hold  for 2 seconds.</p> <p>Factory Reset</p> <p>To perform a factory reset, hold  for 10 seconds. Home Buttons will restart and all user settings will be reset to default. You will have to set up the device again.</p>"},{"location":"original/user_guide/#info_screen","title":"Info Screen","text":"<p>Info screen displays current temperature, humidity and battery percentage.</p> <p></p> <p>Bring it up by pressing any button for 2 seconds. Home Buttons will automatically revert to showing button labels after 30 seconds. Or do that manually by pressing any button again.</p>"},{"location":"original/user_guide/#setup","title":"Setup","text":"<p>Setup allows you to change connection settings and button labels. Home Buttons establishes a web interface accessible within the network it is already connected to.</p> <p>Begin setup by going to Settings Menu and pressing . Home Buttons will display instructions for connecting to a web interface. Scan the QR code or enter the local IP into a web browser.</p> <p></p>"},{"location":"original/user_guide/#change-wi-fi-settings","title":"Change Wi-Fi settings","text":"<p>Click <code>Configure WiFi</code> to change Wi-Fi connection settings. Select a network, enter the password and click save. Wait a few seconds and then press any button to exit setup. Home Buttons will connect to the newly selected Wi-Fi network.</p>"},{"location":"original/user_guide/#change-device-settings","title":"Change device settings","text":"<p>Click <code>Setup</code>. A page with the following parameters will open:</p> <ul> <li> <p><code>Device Name</code> - Name of your device as it will appear in Home Assistant.</p> </li> <li> <p><code>MQTT Server</code> - IP address of your MQTT broker. Usually the same as IP of your Home Assistant server.</p> </li> <li> <p><code>MQTT Port</code> - Port used by MQTT broker. The default is usually 1883.</p> </li> <li> <p><code>MQTT User</code> - MQTT user name (can be empty if not required by broker).</p> </li> <li> <p><code>MQTT Password</code> - MQTT password (can be empty if not required by broker).</p> </li> <li> <p><code>Base Topic</code> - MQTT topic that will be prepended to all topics used by Home Buttons. The default is <code>homebuttons</code>.</p> </li> <li> <p><code>Discovery Prefix</code> - Home Assistant parameter for MQTT discovery. The default is <code>homeassistant</code>. Leave that unchanged if you haven't modified Home Assistant's configuration.</p> </li> <li> <p><code>Static IP</code> - Optional. IP of Home Buttons. Must be outside the DHCP address range of your router.</p> </li> <li> <p><code>Gateway</code> - Optional. The IP address of your router.</p> </li> <li> <p><code>Subnet Mask</code> Optional. Usually <code>255.255.255.0.</code></p> </li> <li> <p><code>Primary DNS Server</code> - If left empty, <code>Gateway</code> IP will be used.</p> </li> <li> <p><code>Secondary DNS Server</code> - If left empty, <code>1.1.1.1</code> will be used.</p> </li> <li> <p><code>Button {1-6} Label</code> - Label that will be displayed next to each button. The order is from top to bottom.</p> </li> <li> <p><code>Icon Server</code> - Default is <code>https://icons.home-buttons.com/mdi/</code>. See Icon Server for more information.</p> </li> <li> <p><code>Temperature Unit</code> - Either <code>C</code> - Celsius  or <code>F</code> - Fahrenheit.</p> </li> </ul> <p>When done, click <code>Save</code>. Device will exit the setup and display button labels.</p> <p>If MQTT connection is not successful, <code>MQTT error</code> will be displayed and Home Buttons will return to welcome screen. You can start the setup again by pressing any button. Please make sure to enter correct MQTT parameters.</p>"},{"location":"original/user_guide/#wifi_setup","title":"Wi-Fi Setup","text":"<p>If Home Buttons becomes inaccessible on the local network due to changed Wi-Fi settings, you can restart the Wi-Fi setup at any time.</p> <p>Open Settings Menu by holding any two buttons together for 5 s and press . Wi-Fi hotspot will be established and connection instructions will be displayed.</p> <ol> <li> <p>Home Buttons will establish a Wi-Fi hotspot. Connect to it by scanning the QR code on the display or manually connecting to Wi-Fi network and entering the password.</p> <p></p> <p>The Wi-Fi password is <code>password123</code>.</p> </li> <li> <p>After connecting to Home Buttons Wi-Fi with your device, a captive portal will pop up automatically. If it doesn't, open the web browser and navigate to any web page. You will be redirected to the captive portal.</p> <p></p> </li> <li> <p>Click <code>Configure WiFi</code> and wait a few seconds for a list of networks to appear.</p> </li> <li> <p>Select your network, enter the password and click <code>Save</code>.</p> </li> </ol> <p>Home Buttons will disable the hotspot and connect to your Wi-Fi network in a few seconds. <code>Wi-Fi CONNECTED</code> will appear on display.</p> <p>If connection is not successful, <code>Wi-Fi error</code> will be displayed and Home Buttons will return to welcome screen. You can start Wi-Fi setup again by pressing any button. Please make sure to enter the password correctly.</p>"},{"location":"original/user_guide/#custom_message","title":"Display a Custom Message","text":"<p>A custom message can be shown on the e-paper display by inputting it in the <code>Show Message</code> field on the device page in Home Assistant.</p> <p>You can also use the <code>Show Message</code> entity in automations:</p> <pre><code>action:\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: text\n    entity_id: text.home_buttons_265cbf_show_message\n    type: set_value\n    value: \"Test \\n Message\"\n</code></pre> <p>Message will not be wrapped automatically. You must include line breaks <code>\\n</code> manually.</p> <p>Alternatively, you can display a message by publishing a retained payload to the <code>{base_topic}/{device_name}/cmd/disp_msg</code> topic. The message will be displayed when the device wakes up on button press or sensor publish. You can clear the message by pressing any button.</p> <p>Example Home Assistant publish service call YAML:</p> <pre><code>service: mqtt.publish\ndata:\n  topic: homebuttons/HB Mini 123/cmd/disp_msg\n  payload: \"Line 1\\nLine 2\"\n  retain: true\n</code></pre> <p><code>mosquitto_pub</code> example:</p> <pre><code>mosquitto_pub -h &lt;broker_host&gt; -t &lt;topic&gt; -m $'Line 1\\nLine 2'\n</code></pre>"},{"location":"original/user_guide/#schedule-wakeup","title":"Schedule Wakeup","text":"<p>You can schedule the next wakeup using the <code>Schedule Wakeup</code> entity. This is useful if you are changing labels dynamically based on state of other devices.</p> <p>For example: If some action you trigger with a button press is not instant, but takes some time to complete, you can schedule the next wakeup after the action is completed. This way the label will be updated sooner, instead of having to wait for the next sensor publish wakeup.</p> <p>Example Home Assistant automation YAML:</p> <pre><code>alias: schedule test\ndescription: \"\"\nmode: single\n\n# Change button label immediately on press\ntrigger:\n  - platform: device\n    domain: mqtt\n    device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    type: button_short_press\n    subtype: button_3\n    discovery_id: HBTNS-2301-001-265CBF button_3\ncondition: []\naction:\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: text\n    entity_id: text.home_buttons_265cbf_button_3_label\n    type: set_value\n    value: _OPENING...\n\n# Schedule next wakeup after 15 seconds\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: number\n    entity_id: number.home_buttons_265cbf_schedule_wakeup\n    type: set_value\n    value: 15\n\n# Simulate some action that takes 10 seconds\n  - delay:\n      hours: 0\n      minutes: 0\n      seconds: 10\n      milliseconds: 0\n\n# Change button label after action is completed\n  - device_id: 966128a1b5d43dd1b22424cd0a77d44c\n    domain: text\n    entity_id: text.home_buttons_265cbf_button_3_label\n    type: set_value\n    value: _OPENED\n</code></pre> <p>You can also schedule wakeup by publishing a message to the <code>{base_topic}/{device_name}/cmd/schedule_wakeup</code> topic. The message payload should be the number of seconds to wait before the next wakeup. The minimum value is 5 seconds.</p>"},{"location":"original/user_guide/#set-labels-dynamically","title":"Set labels dynamically","text":"<p>You can set button labels dynamically from Home Assistant automations or by publishing a MQTT message.</p>"},{"location":"original/user_guide/#home-assistant_1","title":"Home Assistant","text":"<p>Use a <code>text.set_value</code> service call to set the label of a button. The entity ID is <code>text.{device_name}_button_{button_number}_label</code>.</p> <pre><code>service: text.set_value\ndata:\n  value: \"CLICK ME!\"\ntarget:\n  entity_id: text.my_buttons_button_1_label\n</code></pre> <p>You can use templates to set the label based on the state of other entities:</p> <pre><code>service: text.set_value\ndata:\n  value: \"{{ states(\"sensor.time\") }}\"\ntarget:\n  entity_id: text.my_buttons_button_1_label\n</code></pre> <p>You must use this service call. Device actions do not support templates.</p>"},{"location":"original/user_guide/#mqtt","title":"MQTT","text":"<p>Publish a message to the <code>{base_topic}/{device_name}/cmd/button_{button_number}_label</code> topic. The message payload should be the label you want to set. The label will be updated on the next wakeup.</p>"},{"location":"original/user_guide/#icon_server","title":"Icon Server","text":"<p>Home Buttons downloads icons from an Icon Server. The default is <code>https://icons.home-buttons.com/mdi/</code>, hosted by us.</p> <p>The icons are in the BMP format, converted from the official Material Design Icons SVG files. The server is used only when the icon is first downloaded. After that, the icon is stored in the device's flash memory and can be used offline.</p> <p>Repository with converted BMP files and converstion script is here.</p>"},{"location":"original/user_guide/#self_hosted_icon_server","title":"Self Hosted Icon Server","text":"<p>You can aslo host your own icon server. Home Buttons expects the following URL structure:</p> <pre><code>http://{ICON_SERVER}/{icon_size}/{icon_name}.bmp\n</code></pre> <ul> <li><code>{ICON_SERVER}</code> - IP address or domain name of your icon server</li> <li><code>{icon_name}</code> - Name of the icon, as in the Material Design Icons repository.</li> <li><code>{icon_size}</code> - Size of the icon. One of the following: <code>100x100</code>, <code>64x64</code> and <code>48x48</code>.</li> </ul> <p>All three sizes must be available.</p> <p>Example URL: <code>http://192.168.1.123/100x100/home.bmp</code></p> <p>When using a self hosted icon server, the device is not using HTTPS. It's recommended to only use it on a local network.</p> <p>Hosting with Home Assistant</p> <p>For a simple fully local setup, Home Assistant may be used as an icon server. Create a new folder <code>mdi</code> in the <code>www</code> directory and copy the BMP files there. Then set the <code>Icon Server</code>to <code>http://{home_assistant_ip}:8123/local/mdi/</code>. The icons must be in the following structure: <code>/mdi/{icon_size}/{icon_name}.bmp</code>. For example: <code>/mdi/100x100/home.bmp</code>.</p>"},{"location":"original/user_guide/#opening_case","title":"Opening The Case","text":""},{"location":"original/user_guide/#latest-case-revision","title":"Latest Case Revision","text":"<p>If you need to remove or replace the battery, or perform a manual firmware upgrade, you have to open the case. The back cover can stay mounted to the wall during the procedure.</p> <ol> <li> <p>Open the back cover by pressing the tab on the bottom of the device.</p> <p></p> </li> <li> <p>Replace the back cover by aligning it first at the top and then pressing it down until it clicks.</p> <p></p> </li> </ol>"},{"location":"original/user_guide/#open_older_case","title":"Older Case Revision","text":"<ol> <li> <p>Detach the back cover by inserting a flat headed screwdriver in the hole at the bottom and twisting it.</p> <p></p> </li> <li> <p>Pull off the front of device. You may need to use some force.   Hold device in the corners, where the case is strongest.</p> </li> <li> <p>When you're done, reposition the front of device and push firmly until it's flush with the wall.</p> <p></p> </li> </ol>"}]}